# This script segment is generated automatically by AutoPilot

set id 201
set name music_mul_170ns_5KfY
set corename simcore_mul
set op mul
set stage_num 5
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 170
set in0_signed 0
set in1_width 53
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 223
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


set id 203
set name music_mul_49ns_49Lf8
set corename simcore_mul
set op mul
set stage_num 2
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 49
set in0_signed 0
set in1_width 49
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 98
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


set id 206
set name music_mul_56ns_52Mgi
set corename simcore_mul
set op mul
set stage_num 2
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 56
set in0_signed 0
set in1_width 52
set in1_signed 1
set ce_width 1
set ce_signed 0
set out_width 108
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


set id 207
set name music_mul_49ns_44Ngs
set corename simcore_mul
set op mul
set stage_num 2
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 49
set in0_signed 0
set in1_width 44
set in1_signed 1
set ce_width 1
set ce_signed 0
set out_width 93
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


set id 208
set name music_mul_42ns_33OgC
set corename simcore_mul
set op mul
set stage_num 2
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 42
set in0_signed 0
set in1_width 33
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 75
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


set id 209
set name music_mul_64s_63nPgM
set corename simcore_mul
set op mul
set stage_num 5
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 64
set in0_signed 1
set in1_width 63
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 126
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 218
set hasByteEnable 0
set MemName sin_or_cos_doubleEe0
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 256
set AddrRange 10
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 219
set hasByteEnable 0
set MemName sin_or_cos_doubleFfa
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 59
set AddrRange 256
set AddrWd 8
set impl_style distributed
set TrueReset 0
set IsROM 1
set ROMData { "10000000000000000000000000000000000000000000000000000000000" "01111111111111110110001000010110001110100010101001001001001" "01111111111111011000100001011010011011100100101101101101010" "01111111111110100111001011010001001011010100011010000100101" "01111111111101100010000110000010000100110011010000110010110" "01111111111100001001010001110111110001110100111111100000101" "01111111111010011100101110111111111110111101110101110010010" "01111111111000011100011101101011011011100000011101111100100" "01111111110110001000011110001101111001011011010111110111010" "01111111110011100000110000111110001101010101110101101110111" "01111111110000100101010110010110001110011100011010110100101" "01111111101101010110001110110010110110011100111100001110110" "01111111101001110011011010110100000001100010000011101000000" "01111111100101111100111010111100101110001110010100000001010" "01111111100001110010101111110010111101010110110000100100000" "01111111011101010100111001111111110001111101000101010110101" "01111111011000100011011010001111010001001001010010010110000" "01111111010011011110010001010000100010000010111000010000110" "01111111001110000101011111110101101101101001100111101010110" "01111111001000011001000110110011111110101101110010000100101" "01111111000010011001000111000011100001100111111101001100100" "01111110111100000101100001011111100100010000011000010111010" "01111110110101011110010111000110010101110101110100000011111" "01111110101110100011101000111001000110110011111011101010101" "01111110100111010101010111111100001000101001010001011001110" "01111110011111110011100101010110101101101100101100100000001" "01111110010111111110010010010011001001000010011001101001010" "01111110001111110101011111111110101110010000011101101010011" "01111110000111011001001111101001110001010010111010100100000" "01111101111110101001100010100111100110001111010110111000110" "01111101110101100110011010001110100001001000000111011100101" "01111101101100001111110111110111110101101110111011011011110" "01111101100010100101111100111111110111010111001010111111101" "01111101011000101000101011000101111000100111101000001111100" "01111101001110011000000011101100001011001011110010110010001" "01111101000011110100001000010111111111100100101101110001011" "01111100111000111100111010110001100100111001011000100010000" "01111100101101110010011100100100001000100110101001110010111" "01111100100010010100101111011101110110001110101101100101101" "01111100010110100011110101001111110111001000000101110010100" "01111100001010011111101111101110010010001100001101011011011" "01111011111110001000100000110000001011100101011110110000100" "01111011110001011110001010001111100100011100111100001000001" "01111011100100100000101110001001011010100111011011101101110" "01111011010111010000001110011101101000010010010110001011101" "01111011001001101100101101001111000011101111111000001111001" "01111010111011110110001100100011011111000010110111001111100" "01111010101101101100101110100011100111101010001000110101000" "01111010011111010000010101011011000110001011011101101000000" "01111010010000100001000011011000011101111101111111001000010" "01111010000001011110111010101101001100110100010000110001100" "01111001110010001001111101101101101010100101110100001111100" "01111001100010100010001110110001001000111000010001000110001" "01111001010010100111110000010001110010100111111111101111111" "01111001000010011010100100101100101011110000010111111000000" "01111000110001111010101110100001110000110011100010010001011" "01111000100001001000010000010011110110100001101110010001010" "01111000010000000011001100101000101001100000001010101110000" "01110111111110101011100110001000101101101111100010101000111" "01110111101101000001011111011111011110010001111101100101000" "01110111011011000100111011011011001100110000100011101111101" "01110111001000110101111100101101000001000000100101111110111" "01110110110110010100100110001000111000101000001001101001010" "01110110100011100000111010100101100110100010011000011100110" "01110110010000011010111100111100110010100011010100010110101" "01110101111101000010110000001010111000111011001111100011100" "01110101101001011000010111001111001001111001101000101001000" "01110101010101011011110101001011101001001111101011000000100" "01110101000001001101001101000101001101110010010011100100101" "01110100101100101100100010000011100000111011111001111000111" "01110100010111111001110111010000111110001101011101101101110" "01110100000010110101001111111010110010101111011001000110111" "01110011101101011110101111010000111100110001110111001001101" "01110011010111110110011000100110001011001100101111010101010" "01110011000001111100001111001111111100111111000101101110110" "01110010101011110000010110100110100000101110001111111111100" "01110010010101010010110010000100110100000100011111010001100" "01110001111110100011100101001000100011001111001111001010001" "01110001100111100010110011010010001000011100111001101010001" "01110001010000010000100000000100101011011010010000011001010" "01110000111000101100101111000110000000101111011011000000111" "01110000100000110111100011111110101001011100011010111011111" "01110000001000110001000010011001110010010101010100100001110" "01101111110000011001001110000101010011011101111101110001110" "01101111010111110000001010110001101111100101010010100100000" "01101110111110110101111100010010010011100000001110100101100" "01101110100101101010100110011100110101100100001101000110111" "01101110001100001110001101001001110101000001001110100000010" "01101101110010100000110100010100011001011011100011110011101" "01101101011000100010011111111010010010000101000000010000111" "01101100111110010011010011111011110101010101110001000011011" "01101100100011110011010100011100000000000100111011001110000" "01101100001001000010100101100000010101000000011111111011101" "01101011101110000001001011010000111100000101000111001100000" "01101011010010101111001001111000100001110101010000111111111" "01101010110111001100100101100100010110110000001101001110111" "01101010011011011001100010100100001110101000011010001001010" "01101001111111010110000101001010011111111001101001101111100" "01101001100011000010010001101100000010111110101110000100001" "01101001000110011110001100100000010001100110101100011110001" "01101000101001101001111010000001000110001001111000000100100" "01101000001100100101011110101010111010111110010011010111001" "01100111101111010000111110111100101001101011111001001101111" "01100111010001101100011111010111101010100000001101010010110" "01100110110011111000000100011111110011100001110011111111110" "01100110010101110011110010111011011000000011010010000101101" "01100101110111011111101111010011000111110101110100000011110" "01100101011000111011111110010010001110011011011101010111100" "01100100111010001000100100100110010010011000111111101010001" "01100100011011000101100110111111010100100111011010000100100" "01100011111011110011001010001111101111100101000000110000011" "01100011011100010001010011001100010110100110001100101101000" "01100010111100100000000110101100010101000101110011111111101" "01100010011100011111101001101001001101110101001010100110101" "01100001111100010000000000111110111010001011101011110111100" "01100001011011110001010001101011101001010110001100101110000" "01100000111011000011100000101111111111100101110110110011111" "01100000011010000110110011001110110101011110101100101011010" "01011111111000111011001110001101010111000101110110111111000" "01011111010111100000110110110011000011001111011011000101001" "01011110110101110111110010001001101010101011111010111000000" "01011110010100000000000101011101001111010101011110001111100" "01011101110001111001110101111100000011011100100110000001010" "01011101001111100101001000110110101000110100101000110000100" "01011100101101000010000011011111101111111111111001010101100" "01011100001010010000101011001100010111011011010111100011100" "01011011100111010001000101010011101010101010001010110110100" "01011011000100000011010111001111000001100000100111010000101" "01100100100001111110110101010001000100001011010001100001001" "01100100100001111100001111111001100111000000000111000100011" "01100100100001110100011111110011011110110001111000010001101" "01100100100001100111100100111111011001011010010101000110100" "01100100100001010101011111011110100011011001100111110111111" "01100100100000111110001111010010100111110110001100110110011" "01100100100000100001110100011101110000011100100110011011001" "01100100100000000000001111000010100101011111001101111101010" "01100100011111011001011111000100001101110110000001001111101" "01100100011110101101100100100110001110111110001100100110011" "01100100011101111100011111101100101100111001110001100110001" "01100100011101000110010000011100001010001111001010011010001" "01100100011100001010110110111001101000001000101001110100010" "01100100011011001010010011001010100110010011110111110100100" "01100100011010000100100101010101000011000001001010111010010" "01100100011000111001101101011111011011000010111101111101001" "01100100010111101001101011110000101001101101000010101111100" "01100100010110010100100000010000001000110011110001001001010" "01100100010100111010001011000101110000101011010010111100010" "01100100010011011010101100011001111000000110101100010001000" "01100100010001110110000100010101010100010111000000101101011" "01100100010000001100010011000001011001001010010101000011110" "01100100001110011101011000100111111000101010101101101100100" "01100100001100101001010101010011000011011101001001101000001" "01100100001010110000001001001101101000100000011010001011010" "01100100001000110001110100100010110101001011110111010101100" "01100100000110101110010111011110010101001110010000110000011" "01100100000100100101110010001100010010101100011011011001111" "01100100000010011000000100111001010101111111111011111000010" "01100100000000000101001111110010100101110101101101011001010" "01100011111101101101010011000101100111001100100101011010101" "01100011111011010000001111000000011101010011110011111110110" "01100011111000101110000011110001101001101001100000101010110" "01100011110110000110110001101000001011111001000100010000111" "01100011110011011010011000110011100001111001011111000110000" "01100011110000101000111001100011100111101011101100000001100" "01100011101101110010010100001000110111011000110000001010100" "01100011101010110110101000110100001001010000000111001111111" "01100011100111110101110111110110110011100101101100101100111" "01100011100100110000000001100010101010110000000001011001100" "01100011100001100101000110001010000001000110001110001000100" "01100011011110010101000101111111100110111110000010110000111" "01100011011011000000000001010110101010101001110010000101111" "01100011010111100101111000100010111000010110001010011011001" "01100011010100000110101011111000011010001000001010110110011" "01100011010000100010011011101011110111111010110101010000010" "01100011001100111001001000010010010111011100111101000001101" "01100011001001001010110010000001011100001110110010100000000" "01100011000101010111011001001111000111011111101011001000101" "01100011000001011110111110010001111000001011100110011010101" "01100010111101100001100001100000101010111000101111011111100" "01100010111001011111000011010010111001110100111011100100001" "01100010110101010111100100000000011100110011000101000001001" "01100010110001001011000100000001101001001000100011010011001" "01100010101100111001100011101111010001101010011111100100000" "01100010101000100011000011100010100110101011000110000100100" "01100010100100000111100011110101010101110110110100010110101" "01100010011111100111000101000001101010010001100100001010011" "01100010011011000001100111100010001100010011110011001011001" "01100010010110010111001011110010000001100111100111100000001" "01100010010001100111110010001100101101000101110000111110100" "01100010001100110011011011001110001110110010100111001110101" "01100010000111111010000111010011000011111011000100100101000" "01100010000010111011110110111000000110110001011101101101010" "01100001111101111000101010011010101110101010010110001011000" "01100001111000110000100010011000101111111001010001101101011" "01100001110011100011011111010000011011101101100010010111110" "01100001101110010001100001100000100000001110110011100000001" "01100001101000111010101001101000001000011001110001100010011" "01100001100011011110111000000110111011111100101110101000110" "01100001011101111110001101011100111111010100000100001100110" "01100001011000011000101010001010110011100110110001001011110" "01100001010010101110001110110001010110100010110101010101110" "01100001001100111110111011110010000010011001101001010001001" "01100001000111001010110001101110101101111100010011011000011" "01100001000001010001110001001001101100010111111001101110111" "01100000111011010011111010100101101101010001110000101111010" "01100000110101010001001110100101111100100011100110110010100" "01100000101111001001101101101110000010010111101100110010000" "01100000101000111101011000100010000011000100111011100010011" "01100000100010101100001111100110011111001010110110001001110" "01100000011100010110010011100000010011001101101001010001010" "01100000010101111011100100110100110111110010000111010010100" "01100000001111011100000100001010000001011001100001100000001" "01100000001000110111110010000110000000011101011110001011111" "01100000000010001110101111001111100001001011101011101001110" "01011111111011100000111100001101101011100001110000010000101" "01011111110100101110011001101000000011001000110111011001000" "01011111101101110111001000000110100111010001011011011010011" "01011111100110111011001000010001110010101110101100101000000" "01011111011111111010011010110010011011110010010101001101001" "01011111011000110101000000010001110100000111111010001001111" "01011111010001101010111001011001101000110000011001010000100" "01011111001010011100000110110100000001111101100100000011110" "01011111000011001000101001001011100011001101010111111000010" "01011110111011110000100001001011001011000101010010110110100" "01011110110100010011101111011110010011001101100110000010000" "01011110101100110010010100110000110000001100100100100001101" "01011110100101001100010001101110110001100001101111101110011" "01011110011101100001100111000101000001100001000000100101000" "01011110010101110010010101100000100101001101101101111101111" "01011110001101111110011101101110111100010101110000001010101" "01011110000110000110000000011110000001001100100001011001111" "01011101111110001000111110011100001000100101111011100010010" "01011101110110000111011000011000000001110001010010110101010" "01011101101110000001001111000000110110010100001101111010000" "01011101100101110110100011000110001010000101011010110001000" "01011101011101100111010101010111111011000111100001000001101" "01011101010101010011100110100110100001100011110001010001011" "01011101001100111011010111100010101111100100110001100101110" "01011101000100011110101000111101110001010001000111010010100" "01011100111011111101011011101001001100100101111101110010011" "01011100110011010111110000010111000001010001101010101101110" "01011100101010101101100111111001101000101110001111001110010" "01011100100001111111000011000011110101111011110110100000000" "01011100011001001100000010101000110101011011010001100001110" "01011100010000010100100111011100001101001000010000000100011" "01011100000111011000110010010001111100010011110110111010011" "01011011111110011000100011111110011011011110110011010111101" "01011011110101010011111101010110011100010011101100000011001" "01011011101100001010111111001111001001100001001110111001110" "01011011100010111101101010011110000110110100011100100101000" "01011011011001101011111111111001010000110010110001000011111" "01011011010000010110000000010110111100110100001001101000101" "01011011000110111011101100101101111000111101001000001011011" "01011010111101011101000101110101001011111000110011110001100" "01011010110011111010001100100100010100110010110110101100000" "01011010101010010011000001110011001011010001011001101100100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_1P_LUTRAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 220
set hasByteEnable 0
set MemName sin_or_cos_doubleGfk
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 52
set AddrRange 256
set AddrWd 8
set impl_style distributed
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_1P_LUTRAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 221
set hasByteEnable 0
set MemName sin_or_cos_doubleHfu
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 44
set AddrRange 256
set AddrWd 8
set impl_style distributed
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_1P_LUTRAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 222
set hasByteEnable 0
set MemName sin_or_cos_doubleIfE
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 33
set AddrRange 256
set AddrWd 8
set impl_style distributed
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_1P_LUTRAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 223
set hasByteEnable 0
set MemName sin_or_cos_doubleJfO
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 25
set AddrRange 256
set AddrWd 8
set impl_style distributed
set TrueReset 0
set IsROM 1
set ROMData { "1000000111100000110011101" "1000000111011111100000111" "1000000111011101000001001" "1000000111011001010010101" "1000000111010100010000101" "1000000111001110000010111" "1000000111000110100001000" "1000000110111101101110010" "1000000110110011101111001" "1000000110101000011100110" "1000000110011011111100110" "1000000110001110010000101" "1000000101111111001111010" "1000000101101110111101000" "1000000101011101011101100" "1000000101001010101100000" "1000000100110110101110110" "1000000100100001011100011" "1000000100001010111101101" "1000000011110011010000011" "1000000011011010001111111" "1000000011000000000011100" "1000000010100100100111001" "1000000010000111111000100" "1000000001101001111101011" "1000000001001010110000000" "1000000000101010010110001" "1000000000001000110000101" "0111111111100101111000001" "0111111111000001101100100" "0111111110011100011100001" "0111111101110101110011101" "0111111101001110000010010" "0111111100100100111111010" "0111111011111010101110110" "0111111011001111010000110" "0111111010100010100110110" "0111111001110100100111100" "0111111001000101011110010" "0111111000010101001001110" "0111110111100011100011100" "0111110110110000110010001" "0111110101111100110101101" "0111110101000111100011100" "0111110100010001001011111" "0111110011011001100010100" "0111110010100000110001011" "0111110001100110101110000" "0111110000101011011111011" "0111101111101111000100110" "0111101110110001011011011" "0111101101110010100111110" "0111101100110010101001110" "0111101011110001011100110" "0111101010101111000110100" "0111101001101011100100011" "0111101000100110110110000" "0111100111100000111101010" "0111100110011001110110001" "0111100101010001100111010" "0111100100001000001000010" "0111100010111101100101100" "0111100001110001110011011" "0111100000100100111100100" "0111011111010110110101110" "0111011110000111100110011" "0111011100110111001110001" "0111011011100101101110101" "0111011010010011000010111" "0111011000111111001101011" "0111010111101010010001010" "0111010110010100000111100" "0111010100111100111110100" "0111010011100100100010111" "0111010010001011000111010" "0111010000110000011111111" "0111001111010100110000000" "0111001101110111111010110" "0111001100011001111110001" "0111001010111010110111101" "0111001001011010101111101" "0111000111111001011101011" "0111000110010111000101011" "0111000100110011100111000" "0111000011001111000100101" "0111000001101001011000001" "0111000000000010101011010" "0110111110011010110111000" "0110111100110001111110011" "0110111011001000000010111" "0110111001011101000001000" "0110110111110000111100011" "0110110110000011110000001" "0110110100010101100101101" "0110110010100110010100111" "0110110000110110000010110" "0110101111000100101101000" "0110101101010010010001011" "0110101011011110111000001" "0110101001101010011010100" "0110100111110100111110110" "0110100101111110011111001" "0110100100000110111101100" "0110100010001110011101011" "0110100000010100111001010" "0110011110011010010111011" "0110011100011110110100000" "0110011010100010010011101" "0110011000100100110101011" "0110010110100110010001100" "0110010100100110110011110" "0110010010100110010101001" "0110010000100100111110000" "0110001110100010100101011" "0110001100011111001010110" "0110001010011010111011100" "0110001000010101101000011" "0110000110001111011011111" "0110000100001000010001111" "0110000010000000001110011" "0101111111110111001100111" "0101111101101101010010010" "0101111011100010011101011" "0101111001010110101001101" "0101110111001001111111111" "0101110100111100011000000" "0101110010101101111010111" "0101110000011110100011001" "0001010001100110101101100" "0001010001100110100100110" "0001010001100110010100010" "0001010001100101111000000" "0001010001100101010011100" "0001010001100100100110011" "0001010001100011110010111" "0001010001100010110001110" "0001010001100001101100101" "0001010001100000011010001" "0001010001011111000000010" "0001010001011101011010111" "0001010001011011110010010" "0001010001011001111100000" "0001010001010111111110001" "0001010001010101111000101" "0001010001010011101001000" "0001010001010001010000000" "0001010001001110101101111" "0001010001001100000010011" "0001010001001001010000110" "0001010001000110010011011" "0001010001000011001110000" "0001010001000000000010111" "0001010000111100101000101" "0001010000111001001000101" "0001010000110101011101011" "0001010000110001101111110" "0001010000101101110100010" "0001010000101001101111100" "0001010000100101100010111" "0001010000100001001111001" "0001010000011100101110111" "0001010000011000001000011" "0001010000010011011011000" "0001010000001110100001101" "0001010000001001100000101" "0001010000000100010010100" "0001001111111110111111011" "0001001111111001100101000" "0001001111110100000000101" "0001001111101110010011001" "0001001111101000011010010" "0001001111100010011111000" "0001001111011100010101101" "0001001111010110000010101" "0001001111001111101010111" "0001001111001001001010101" "0001001111000010011101111" "0001001110111011101011000" "0001001110110100101111100" "0001001110101101101011100" "0001001110100110011110100" "0001001110011111000111000" "0001001110010111101000110" "0001001110010000000010010" "0001001110001000010011010" "0001001110000000011010100" "0001001101111000011001100" "0001001101110000010001100" "0001001101101000000001001" "0001001101011111100010100" "0001001101010111000010010" "0001001101001110010100011" "0001001101000101011111010" "0001001100111100100101000" "0001001100110011100001010" "0001001100101010010001101" "0001001100100000111110101" "0001001100010111011100111" "0001001100001101111011000" "0001001100000100001001011" "0001001011111010010110001" "0001001011110000010100100" "0001001011100110001100001" "0001001011011011111110010" "0001001011010001100101100" "0001001011000111000101100" "0001001010111100011010100" "0001001010110001101100000" "0001001010100110110100011" "0001001010011011110001000" "0001001010010000100101110" "0001001010000101010110100" "0001001001111010000000010" "0001001001101110011100110" "0001001001100010110010010" "0001001001010111000001010" "0001001001001011001001001" "0001001000111111000111110" "0001001000110010111100110" "0001001000100110101011110" "0001001000011010010010111" "0001001000001101110001111" "0001001000000001001001100" "0001000111110100011000011" "0001000111100111011111111" "0001000111011010011101011" "0001000111001101010101000" "0001000111000000000111011" "0001000110110010101111010" "0001000110100101001110101" "0001000110010111101000100" "0001000110001001111001111" "0001000101111100000011111" "0001000101101110000111101" "0001000101100000000000010" "0001000101010001110011101" "0001000101000011011110110" "0001000100110101000010001" "0001000100100110011111111" "0001000100010111110100100" "0001000100001001000000011" "0001000011111010000110100" "0001000011101011000111100" "0001000011011011111111001" "0001000011001100101111001" "0001000010111101011001110" "0001000010101101110111101" "0001000010011110010110010" "0001000010001110100110101" "0001000001111110110101001" "0001000001101110111100110" "0001000001011110111000111" "0001000001001110101111011" "0001000000111110011110010" "0001000000101110000111011" "0001000000011101101000001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_1P_LUTRAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 224 \
    name t_in \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_t_in \
    op interface \
    ports { t_in { I 64 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 225 \
    name do_cos \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_do_cos \
    op interface \
    ports { do_cos { I 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -2 \
    name ap_return \
    type ap_return \
    reset_level 1 \
    sync_rst true \
    corename ap_return \
    op interface \
    ports { ap_return { O 64 vector } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -4 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


