// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module eig_decompose (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Rx_M_real_address0,
        Rx_M_real_ce0,
        Rx_M_real_q0,
        Rx_M_imag_address0,
        Rx_M_imag_ce0,
        Rx_M_imag_q0,
        U_M_real_address0,
        U_M_real_ce0,
        U_M_real_we0,
        U_M_real_d0,
        U_M_real_q0,
        U_M_imag_address0,
        U_M_imag_ce0,
        U_M_imag_we0,
        U_M_imag_d0,
        U_M_imag_q0,
        eigval_0_read,
        eigval_1_read,
        eigval_2_read,
        eigval_3_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 196'd1;
parameter    ap_ST_fsm_state2 = 196'd2;
parameter    ap_ST_fsm_state3 = 196'd4;
parameter    ap_ST_fsm_state4 = 196'd8;
parameter    ap_ST_fsm_state5 = 196'd16;
parameter    ap_ST_fsm_state6 = 196'd32;
parameter    ap_ST_fsm_state7 = 196'd64;
parameter    ap_ST_fsm_state8 = 196'd128;
parameter    ap_ST_fsm_state9 = 196'd256;
parameter    ap_ST_fsm_state10 = 196'd512;
parameter    ap_ST_fsm_state11 = 196'd1024;
parameter    ap_ST_fsm_state12 = 196'd2048;
parameter    ap_ST_fsm_state13 = 196'd4096;
parameter    ap_ST_fsm_state14 = 196'd8192;
parameter    ap_ST_fsm_state15 = 196'd16384;
parameter    ap_ST_fsm_state16 = 196'd32768;
parameter    ap_ST_fsm_state17 = 196'd65536;
parameter    ap_ST_fsm_state18 = 196'd131072;
parameter    ap_ST_fsm_state19 = 196'd262144;
parameter    ap_ST_fsm_state20 = 196'd524288;
parameter    ap_ST_fsm_state21 = 196'd1048576;
parameter    ap_ST_fsm_state22 = 196'd2097152;
parameter    ap_ST_fsm_state23 = 196'd4194304;
parameter    ap_ST_fsm_state24 = 196'd8388608;
parameter    ap_ST_fsm_state25 = 196'd16777216;
parameter    ap_ST_fsm_state26 = 196'd33554432;
parameter    ap_ST_fsm_state27 = 196'd67108864;
parameter    ap_ST_fsm_state28 = 196'd134217728;
parameter    ap_ST_fsm_state29 = 196'd268435456;
parameter    ap_ST_fsm_state30 = 196'd536870912;
parameter    ap_ST_fsm_state31 = 196'd1073741824;
parameter    ap_ST_fsm_state32 = 196'd2147483648;
parameter    ap_ST_fsm_state33 = 196'd4294967296;
parameter    ap_ST_fsm_state34 = 196'd8589934592;
parameter    ap_ST_fsm_state35 = 196'd17179869184;
parameter    ap_ST_fsm_state36 = 196'd34359738368;
parameter    ap_ST_fsm_state37 = 196'd68719476736;
parameter    ap_ST_fsm_state38 = 196'd137438953472;
parameter    ap_ST_fsm_state39 = 196'd274877906944;
parameter    ap_ST_fsm_state40 = 196'd549755813888;
parameter    ap_ST_fsm_state41 = 196'd1099511627776;
parameter    ap_ST_fsm_state42 = 196'd2199023255552;
parameter    ap_ST_fsm_state43 = 196'd4398046511104;
parameter    ap_ST_fsm_state44 = 196'd8796093022208;
parameter    ap_ST_fsm_state45 = 196'd17592186044416;
parameter    ap_ST_fsm_state46 = 196'd35184372088832;
parameter    ap_ST_fsm_state47 = 196'd70368744177664;
parameter    ap_ST_fsm_state48 = 196'd140737488355328;
parameter    ap_ST_fsm_state49 = 196'd281474976710656;
parameter    ap_ST_fsm_state50 = 196'd562949953421312;
parameter    ap_ST_fsm_state51 = 196'd1125899906842624;
parameter    ap_ST_fsm_state52 = 196'd2251799813685248;
parameter    ap_ST_fsm_state53 = 196'd4503599627370496;
parameter    ap_ST_fsm_state54 = 196'd9007199254740992;
parameter    ap_ST_fsm_state55 = 196'd18014398509481984;
parameter    ap_ST_fsm_state56 = 196'd36028797018963968;
parameter    ap_ST_fsm_state57 = 196'd72057594037927936;
parameter    ap_ST_fsm_state58 = 196'd144115188075855872;
parameter    ap_ST_fsm_state59 = 196'd288230376151711744;
parameter    ap_ST_fsm_state60 = 196'd576460752303423488;
parameter    ap_ST_fsm_state61 = 196'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 196'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 196'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 196'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 196'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 196'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 196'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 196'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 196'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 196'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 196'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 196'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 196'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 196'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 196'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 196'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 196'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 196'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 196'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 196'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 196'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 196'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 196'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 196'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 196'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 196'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 196'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 196'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 196'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 196'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 196'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 196'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 196'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 196'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 196'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 196'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 196'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 196'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 196'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 196'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 196'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 196'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 196'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 196'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 196'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 196'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 196'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 196'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 196'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 196'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 196'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 196'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 196'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 196'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 196'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 196'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 196'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 196'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 196'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 196'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 196'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 196'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 196'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 196'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 196'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 196'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 196'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 196'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 196'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 196'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 196'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 196'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 196'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 196'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 196'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 196'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 196'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 196'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 196'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 196'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 196'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 196'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 196'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 196'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 196'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 196'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 196'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 196'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 196'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 196'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 196'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 196'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 196'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 196'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 196'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 196'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 196'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 196'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 196'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 196'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 196'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 196'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 196'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 196'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 196'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 196'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 196'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 196'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 196'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 196'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 196'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 196'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 196'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 196'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 196'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 196'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 196'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 196'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 196'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 196'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 196'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 196'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 196'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 196'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 196'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 196'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 196'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 196'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 196'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 196'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 196'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 196'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 196'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 196'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 196'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 196'd50216813883093446110686315385661331328818843555712276103168;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] Rx_M_real_address0;
output   Rx_M_real_ce0;
input  [31:0] Rx_M_real_q0;
output  [3:0] Rx_M_imag_address0;
output   Rx_M_imag_ce0;
input  [31:0] Rx_M_imag_q0;
output  [3:0] U_M_real_address0;
output   U_M_real_ce0;
output   U_M_real_we0;
output  [31:0] U_M_real_d0;
input  [31:0] U_M_real_q0;
output  [3:0] U_M_imag_address0;
output   U_M_imag_ce0;
output   U_M_imag_we0;
output  [31:0] U_M_imag_d0;
input  [31:0] U_M_imag_q0;
input  [31:0] eigval_0_read;
input  [31:0] eigval_1_read;
input  [31:0] eigval_2_read;
input  [31:0] eigval_3_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] Rx_M_real_address0;
reg Rx_M_real_ce0;
reg[3:0] Rx_M_imag_address0;
reg Rx_M_imag_ce0;
reg[3:0] U_M_real_address0;
reg U_M_real_ce0;
reg U_M_real_we0;
reg[31:0] U_M_real_d0;
reg[3:0] U_M_imag_address0;
reg U_M_imag_ce0;
reg U_M_imag_we0;
reg[31:0] U_M_imag_d0;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [195:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_949_p2;
reg   [31:0] reg_1021;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state140;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state175;
wire   [31:0] grp_fu_955_p2;
reg   [31:0] reg_1026;
wire   [31:0] grp_fu_961_p2;
reg   [31:0] reg_1031;
wire   [31:0] grp_fu_967_p2;
reg   [31:0] reg_1036;
wire   [31:0] grp_fu_931_p2;
reg   [31:0] reg_1041;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state170;
wire   [31:0] grp_fu_935_p2;
reg   [31:0] reg_1050;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state180;
reg   [31:0] reg_1059;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state111;
wire   [31:0] Rx_temp_M_real_q0;
reg   [31:0] reg_1071;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state112;
wire   [31:0] Rx_temp_M_imag_q0;
reg   [31:0] reg_1081;
reg   [31:0] reg_1091;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state81;
reg   [31:0] reg_1100;
wire    ap_CS_fsm_state172;
wire   [1:0] add_ln11_fu_1125_p2;
reg   [1:0] add_ln11_reg_1999;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln11_1_fu_1131_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] add_ln12_fu_1163_p2;
reg   [1:0] add_ln12_reg_2015;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln12_1_fu_1169_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] add_ln13_fu_1201_p2;
reg   [1:0] add_ln13_reg_2031;
wire    ap_CS_fsm_state6;
wire   [1:0] add_ln13_1_fu_1207_p2;
wire    ap_CS_fsm_state7;
wire   [1:0] add_ln14_fu_1239_p2;
reg   [1:0] add_ln14_reg_2047;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln14_1_fu_1245_p2;
wire    ap_CS_fsm_state9;
wire   [2:0] i_fu_1283_p2;
reg   [2:0] i_reg_2066;
wire    ap_CS_fsm_state10;
wire   [5:0] zext_ln20_fu_1297_p1;
reg   [5:0] zext_ln20_reg_2071;
wire   [0:0] icmp_ln19_fu_1277_p2;
wire   [2:0] j_fu_1307_p2;
reg   [2:0] j_reg_2079;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln21_1_fu_1322_p1;
reg   [63:0] zext_ln21_1_reg_2084;
wire   [0:0] icmp_ln20_fu_1301_p2;
wire   [4:0] i_10_fu_1334_p2;
reg   [4:0] i_10_reg_2105;
wire    ap_CS_fsm_state13;
wire   [2:0] i_11_fu_1346_p2;
reg   [2:0] i_11_reg_2113;
wire    ap_CS_fsm_state15;
wire   [5:0] zext_ln28_fu_1360_p1;
reg   [5:0] zext_ln28_reg_2118;
wire   [0:0] icmp_ln27_fu_1340_p2;
wire   [2:0] j_7_fu_1370_p2;
reg   [2:0] j_7_reg_2127;
wire    ap_CS_fsm_state16;
wire   [5:0] zext_ln34_fu_1376_p1;
reg   [5:0] zext_ln34_reg_2132;
wire   [0:0] icmp_ln28_fu_1364_p2;
reg   [3:0] eig_mat_M_real_addr_3_reg_2137;
reg   [3:0] eig_mat_M_imag_addr_2_reg_2142;
wire   [2:0] k_fu_1397_p2;
reg   [2:0] k_reg_2150;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln31_fu_1391_p2;
wire   [31:0] R_temp_M_real_q0;
wire    ap_CS_fsm_state18;
wire   [31:0] R_temp_M_imag_q0;
wire   [31:0] Q_temp_M_real_q0;
wire   [31:0] Q_temp_M_imag_q0;
wire   [2:0] count_fu_1447_p2;
reg   [2:0] count_reg_2202;
wire    ap_CS_fsm_state32;
wire   [5:0] zext_ln1067_fu_1453_p1;
reg   [5:0] zext_ln1067_reg_2207;
wire   [0:0] icmp_ln38_fu_1441_p2;
reg   [3:0] U_M_real_addr_reg_2219;
wire    ap_CS_fsm_state33;
reg   [3:0] U_M_imag_addr_reg_2224;
wire   [1:0] trunc_ln39_fu_1520_p1;
reg   [1:0] trunc_ln39_reg_2229;
wire   [31:0] eigval_3_1_fu_1558_p3;
reg   [31:0] eigval_3_1_reg_2234;
wire   [31:0] eigval_2_1_fu_1566_p3;
reg   [31:0] eigval_2_1_reg_2240;
wire   [31:0] eigval_1_1_fu_1582_p3;
reg   [31:0] eigval_1_1_reg_2246;
wire   [31:0] eigval_0_1_fu_1606_p3;
reg   [31:0] eigval_0_1_reg_2252;
wire   [2:0] i_12_fu_1620_p2;
reg   [2:0] i_12_reg_2261;
wire    ap_CS_fsm_state34;
wire   [63:0] zext_ln41_2_fu_1648_p1;
reg   [63:0] zext_ln41_2_reg_2266;
wire   [0:0] icmp_ln40_fu_1614_p2;
wire   [31:0] p_y_read_assign_fu_1653_p6;
reg   [31:0] p_y_read_assign_reg_2278;
reg   [31:0] p_r_M_real_reg_2283;
wire    ap_CS_fsm_state35;
wire   [31:0] zext_ln43_fu_1662_p1;
reg   [31:0] zext_ln43_reg_2293;
wire    ap_CS_fsm_state42;
wire   [1:0] i_13_fu_1672_p2;
reg   [1:0] i_13_reg_2303;
wire   [0:0] icmp_ln43_fu_1666_p2;
wire   [5:0] zext_ln44_fu_1700_p1;
reg   [5:0] zext_ln44_reg_2318;
reg   [3:0] Rx_temp_M_real_addr_4_reg_2327;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln45_fu_1704_p2;
reg   [3:0] Rx_temp_M_imag_addr_4_reg_2332;
wire   [31:0] j_8_fu_1725_p2;
reg   [31:0] j_8_reg_2337;
wire   [31:0] j_10_fu_1731_p2;
reg   [31:0] j_10_reg_2342;
wire    ap_CS_fsm_state78;
wire   [3:0] trunc_ln49_fu_1743_p1;
reg   [3:0] trunc_ln49_reg_2350;
wire   [0:0] icmp_ln48_fu_1737_p2;
wire   [5:0] sext_ln49_cast_fu_1761_p3;
reg   [5:0] sext_ln49_cast_reg_2365;
wire   [5:0] add_ln51_fu_1778_p2;
reg   [5:0] add_ln51_reg_2373;
wire    ap_CS_fsm_state80;
wire   [0:0] icmp_ln50_fu_1768_p2;
wire   [31:0] q_1_fu_1794_p2;
reg   [31:0] q_1_reg_2388;
reg   [3:0] Rx_temp_M_real_addr_8_reg_2393;
wire    ap_CS_fsm_state88;
reg   [3:0] Rx_temp_M_imag_addr_8_reg_2398;
wire  signed [31:0] sext_ln57_fu_1805_p1;
wire    ap_CS_fsm_state96;
wire  signed [5:0] sext_ln64_fu_1829_p1;
reg  signed [5:0] sext_ln64_reg_2411;
wire   [0:0] tmp_48_fu_1809_p3;
reg   [3:0] U_M_real_addr_2_reg_2416;
reg   [3:0] U_M_imag_addr_2_reg_2421;
reg   [3:0] Rx_temp_M_real_addr_5_reg_2426;
reg   [3:0] Rx_temp_M_imag_addr_5_reg_2431;
wire   [31:0] j_9_fu_1856_p2;
reg   [31:0] j_9_reg_2436;
wire    ap_CS_fsm_state97;
wire   [0:0] icmp_ln59_fu_1862_p2;
wire   [2:0] m_fu_1906_p2;
reg   [2:0] m_reg_2464;
wire   [31:0] p_r_M_real_14_fu_1922_p1;
wire   [31:0] p_r_M_imag_13_fu_1938_p1;
wire   [31:0] grp_fu_987_p2;
reg   [31:0] tmp_7_i_i_reg_2486;
wire   [31:0] grp_fu_992_p2;
reg   [31:0] tmp_8_i_i_reg_2491;
wire   [31:0] grp_fu_943_p2;
reg   [31:0] tmp_9_i_i_reg_2496;
wire   [31:0] grp_fu_1003_p2;
reg   [31:0] sum_M_real_reg_2501;
wire    ap_CS_fsm_state136;
wire   [31:0] grp_fu_1008_p2;
reg   [31:0] sum_M_imag_reg_2507;
wire    ap_CS_fsm_state150;
wire   [31:0] grp_fu_1015_p2;
reg   [31:0] midsum_reg_2518;
wire    ap_CS_fsm_state161;
wire   [2:0] i_14_fu_1950_p2;
reg   [2:0] i_14_reg_2528;
wire    ap_CS_fsm_state171;
reg   [3:0] U_M_real_addr_4_reg_2533;
wire   [0:0] icmp_ln67_fu_1944_p2;
reg   [3:0] U_M_imag_addr_4_reg_2538;
reg   [3:0] Q_temp_M_real_address0;
reg    Q_temp_M_real_ce0;
reg    Q_temp_M_real_we0;
reg   [31:0] Q_temp_M_real_d0;
reg   [3:0] Q_temp_M_imag_address0;
reg    Q_temp_M_imag_ce0;
reg    Q_temp_M_imag_we0;
reg   [31:0] Q_temp_M_imag_d0;
reg   [3:0] R_temp_M_real_address0;
reg    R_temp_M_real_ce0;
reg    R_temp_M_real_we0;
reg   [31:0] R_temp_M_real_d0;
reg   [3:0] R_temp_M_imag_address0;
reg    R_temp_M_imag_ce0;
reg    R_temp_M_imag_we0;
reg   [31:0] R_temp_M_imag_d0;
reg   [3:0] Rx_temp_M_real_address0;
reg    Rx_temp_M_real_ce0;
reg    Rx_temp_M_real_we0;
reg   [31:0] Rx_temp_M_real_d0;
reg   [3:0] Rx_temp_M_imag_address0;
reg    Rx_temp_M_imag_ce0;
reg    Rx_temp_M_imag_we0;
reg   [31:0] Rx_temp_M_imag_d0;
reg   [3:0] eig_mat_M_real_address0;
reg    eig_mat_M_real_ce0;
reg    eig_mat_M_real_we0;
reg   [31:0] eig_mat_M_real_d0;
wire   [31:0] eig_mat_M_real_q0;
reg   [3:0] eig_mat_M_imag_address0;
reg    eig_mat_M_imag_ce0;
reg    eig_mat_M_imag_we0;
reg   [31:0] eig_mat_M_imag_d0;
wire   [31:0] eig_mat_M_imag_q0;
wire    grp_qrf_alt_fu_913_ap_start;
wire    grp_qrf_alt_fu_913_ap_done;
wire    grp_qrf_alt_fu_913_ap_idle;
wire    grp_qrf_alt_fu_913_ap_ready;
wire   [3:0] grp_qrf_alt_fu_913_A_M_real_address0;
wire    grp_qrf_alt_fu_913_A_M_real_ce0;
wire   [3:0] grp_qrf_alt_fu_913_A_M_imag_address0;
wire    grp_qrf_alt_fu_913_A_M_imag_ce0;
wire   [3:0] grp_qrf_alt_fu_913_Q_M_real_address0;
wire    grp_qrf_alt_fu_913_Q_M_real_ce0;
wire    grp_qrf_alt_fu_913_Q_M_real_we0;
wire   [31:0] grp_qrf_alt_fu_913_Q_M_real_d0;
wire   [3:0] grp_qrf_alt_fu_913_Q_M_imag_address0;
wire    grp_qrf_alt_fu_913_Q_M_imag_ce0;
wire    grp_qrf_alt_fu_913_Q_M_imag_we0;
wire   [31:0] grp_qrf_alt_fu_913_Q_M_imag_d0;
wire   [3:0] grp_qrf_alt_fu_913_R_M_real_address0;
wire    grp_qrf_alt_fu_913_R_M_real_ce0;
wire    grp_qrf_alt_fu_913_R_M_real_we0;
wire   [31:0] grp_qrf_alt_fu_913_R_M_real_d0;
wire   [3:0] grp_qrf_alt_fu_913_R_M_imag_address0;
wire    grp_qrf_alt_fu_913_R_M_imag_ce0;
wire    grp_qrf_alt_fu_913_R_M_imag_we0;
wire   [31:0] grp_qrf_alt_fu_913_R_M_imag_d0;
reg   [1:0] phi_ln11_reg_559;
wire   [0:0] icmp_ln11_fu_1151_p2;
wire   [0:0] icmp_ln11_1_fu_1157_p2;
reg   [1:0] phi_ln11_1_reg_571;
reg   [1:0] phi_ln12_reg_582;
wire   [0:0] icmp_ln12_fu_1189_p2;
wire   [0:0] icmp_ln12_1_fu_1195_p2;
reg   [1:0] phi_ln12_1_reg_594;
reg   [1:0] phi_ln13_reg_605;
wire   [0:0] icmp_ln13_fu_1227_p2;
wire   [0:0] icmp_ln13_1_fu_1233_p2;
reg   [1:0] phi_ln13_1_reg_617;
reg   [1:0] phi_ln14_reg_628;
wire   [0:0] icmp_ln14_fu_1265_p2;
wire   [0:0] icmp_ln14_1_fu_1271_p2;
reg   [1:0] phi_ln14_1_reg_640;
reg   [2:0] i_0_reg_651;
reg   [2:0] j_0_reg_662;
wire    ap_CS_fsm_state12;
reg   [4:0] i16_0_reg_673;
reg   [2:0] i17_0_reg_684;
wire    ap_CS_fsm_state14;
reg   [2:0] j18_0_reg_695;
reg   [31:0] complex_M_imag_read_reg_706;
reg   [31:0] complex_M_real_read_reg_719;
reg   [2:0] k_0_reg_732;
reg   [31:0] eigval_0_0_reg_743;
wire   [0:0] icmp_ln25_fu_1328_p2;
reg   [31:0] eigval_1_0_reg_753;
reg   [31:0] eigval_2_0_reg_763;
reg   [31:0] eigval_3_0_reg_773;
reg   [2:0] count_0_reg_783;
reg   [2:0] i19_0_reg_795;
wire    ap_CS_fsm_state41;
reg   [1:0] j_11_reg_806;
reg   [31:0] j21_0_reg_818;
wire    ap_CS_fsm_state77;
reg   [31:0] j22_0_in_reg_827;
reg   [31:0] q_0_reg_836;
wire    ap_CS_fsm_state95;
reg   [31:0] p_x_assign_reg_845;
reg  signed [2:0] m_0_reg_857;
reg   [31:0] complex_M_imag_read_2_reg_869;
reg   [31:0] complex_M_real_read_2_reg_881;
reg   [31:0] j23_0_in_reg_893;
reg   [2:0] i24_0_reg_902;
wire    ap_CS_fsm_state196;
reg    grp_qrf_alt_fu_913_ap_start_reg;
wire   [63:0] zext_ln1027_fu_1145_p1;
wire   [63:0] zext_ln1027_9_fu_1183_p1;
wire   [63:0] zext_ln1027_10_fu_1221_p1;
wire   [63:0] zext_ln1027_11_fu_1259_p1;
wire   [63:0] zext_ln34_1_fu_1385_p1;
wire   [63:0] zext_ln32_2_fu_1424_p1;
wire   [63:0] zext_ln32_3_fu_1435_p1;
wire   [63:0] zext_ln1044_1_fu_1475_p1;
wire   [63:0] zext_ln1067_4_fu_1514_p1;
wire   [63:0] zext_ln44_1_fu_1686_p1;
wire  signed [63:0] sext_ln46_fu_1719_p1;
wire  signed [63:0] sext_ln49_fu_1755_p1;
wire  signed [63:0] sext_ln51_1_fu_1788_p1;
wire  signed [63:0] sext_ln51_fu_1800_p1;
wire   [63:0] zext_ln64_1_fu_1838_p1;
wire   [63:0] zext_ln62_fu_1850_p1;
wire  signed [63:0] sext_ln60_fu_1889_p1;
wire  signed [63:0] sext_ln60_1_fu_1900_p1;
wire   [63:0] zext_ln68_1_fu_1973_p1;
reg   [31:0] grp_fu_931_p0;
reg   [31:0] grp_fu_931_p1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state166;
wire    ap_CS_fsm_state176;
reg   [31:0] grp_fu_935_p0;
reg   [31:0] grp_fu_935_p1;
reg   [31:0] grp_fu_949_p0;
reg   [31:0] grp_fu_949_p1;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state162;
reg   [31:0] grp_fu_955_p0;
reg   [31:0] grp_fu_955_p1;
reg   [31:0] grp_fu_961_p0;
reg   [31:0] grp_fu_961_p1;
reg   [31:0] grp_fu_967_p0;
reg   [31:0] grp_fu_967_p1;
wire   [31:0] grp_fu_987_p0;
wire   [31:0] grp_fu_992_p0;
reg   [31:0] grp_fu_1003_p0;
reg   [31:0] grp_fu_1003_p1;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state181;
reg   [31:0] grp_fu_1008_p0;
reg   [31:0] grp_fu_1008_p1;
wire   [3:0] tmp_53_fu_1137_p3;
wire   [3:0] tmp_45_fu_1175_p3;
wire   [3:0] tmp_46_fu_1213_p3;
wire   [3:0] tmp_47_fu_1251_p3;
wire   [4:0] tmp_54_fu_1289_p3;
wire   [5:0] zext_ln21_fu_1313_p1;
wire   [5:0] add_ln21_fu_1317_p2;
wire   [4:0] tmp_56_fu_1352_p3;
wire   [5:0] add_ln34_fu_1380_p2;
wire   [4:0] tmp_60_fu_1407_p3;
wire   [5:0] zext_ln32_1_fu_1415_p1;
wire   [5:0] add_ln32_fu_1419_p2;
wire   [5:0] zext_ln32_fu_1403_p1;
wire   [5:0] add_ln32_1_fu_1430_p2;
wire   [4:0] tmp_55_fu_1457_p3;
wire   [5:0] zext_ln1044_fu_1465_p1;
wire   [5:0] add_ln1044_fu_1469_p2;
wire   [2:0] xor_ln1067_fu_1504_p2;
wire  signed [3:0] sext_ln1067_fu_1510_p1;
wire   [0:0] icmp_ln39_fu_1524_p2;
wire   [0:0] icmp_ln39_1_fu_1538_p2;
wire   [31:0] select_ln39_fu_1530_p3;
wire   [0:0] icmp_ln39_2_fu_1552_p2;
wire   [31:0] select_ln39_1_fu_1544_p3;
wire   [31:0] select_ln39_2_fu_1574_p3;
wire   [31:0] select_ln39_3_fu_1590_p3;
wire   [31:0] select_ln39_4_fu_1598_p3;
wire   [4:0] tmp_57_fu_1630_p3;
wire   [5:0] zext_ln41_fu_1626_p1;
wire   [5:0] zext_ln41_1_fu_1638_p1;
wire   [5:0] add_ln41_fu_1642_p2;
wire   [3:0] tmp_59_fu_1678_p3;
wire   [3:0] tmp_58_fu_1692_p3;
wire   [5:0] trunc_ln46_fu_1710_p1;
wire   [5:0] add_ln46_fu_1714_p2;
wire   [33:0] tmp_63_fu_1747_p3;
wire   [5:0] trunc_ln51_fu_1774_p1;
wire   [5:0] add_ln51_1_fu_1783_p2;
wire   [4:0] tmp_61_fu_1821_p3;
wire   [5:0] add_ln64_fu_1833_p2;
wire   [5:0] zext_ln64_fu_1817_p1;
wire   [5:0] add_ln62_fu_1844_p2;
wire   [3:0] trunc_ln60_1_fu_1872_p1;
wire   [5:0] sext_ln60_1_cast_fu_1876_p3;
wire   [5:0] add_ln60_fu_1884_p2;
wire   [5:0] trunc_ln60_fu_1868_p1;
wire   [5:0] add_ln60_1_fu_1895_p2;
wire   [31:0] bitcast_ln444_fu_1912_p1;
wire   [31:0] xor_ln444_fu_1916_p2;
wire   [31:0] bitcast_ln444_3_fu_1928_p1;
wire   [31:0] xor_ln444_1_fu_1932_p2;
wire   [4:0] tmp_62_fu_1956_p3;
wire   [5:0] zext_ln68_fu_1964_p1;
wire   [5:0] add_ln68_fu_1968_p2;
reg   [1:0] grp_fu_931_opcode;
reg   [1:0] grp_fu_935_opcode;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [195:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 196'd1;
#0 grp_qrf_alt_fu_913_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
end

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_temp_M_real_address0),
    .ce0(Q_temp_M_real_ce0),
    .we0(Q_temp_M_real_we0),
    .d0(Q_temp_M_real_d0),
    .q0(Q_temp_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_temp_M_imag_address0),
    .ce0(Q_temp_M_imag_ce0),
    .we0(Q_temp_M_imag_we0),
    .d0(Q_temp_M_imag_d0),
    .q0(Q_temp_M_imag_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_temp_M_real_address0),
    .ce0(R_temp_M_real_ce0),
    .we0(R_temp_M_real_we0),
    .d0(R_temp_M_real_d0),
    .q0(R_temp_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_temp_M_imag_address0),
    .ce0(R_temp_M_imag_ce0),
    .we0(R_temp_M_imag_we0),
    .d0(R_temp_M_imag_d0),
    .q0(R_temp_M_imag_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rx_temp_M_real_address0),
    .ce0(Rx_temp_M_real_ce0),
    .we0(Rx_temp_M_real_we0),
    .d0(Rx_temp_M_real_d0),
    .q0(Rx_temp_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rx_temp_M_imag_address0),
    .ce0(Rx_temp_M_imag_ce0),
    .we0(Rx_temp_M_imag_we0),
    .d0(Rx_temp_M_imag_d0),
    .q0(Rx_temp_M_imag_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eig_mat_M_real_address0),
    .ce0(eig_mat_M_real_ce0),
    .we0(eig_mat_M_real_we0),
    .d0(eig_mat_M_real_d0),
    .q0(eig_mat_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eig_mat_M_imag_address0),
    .ce0(eig_mat_M_imag_ce0),
    .we0(eig_mat_M_imag_we0),
    .d0(eig_mat_M_imag_d0),
    .q0(eig_mat_M_imag_q0)
);

qrf_alt grp_qrf_alt_fu_913(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_qrf_alt_fu_913_ap_start),
    .ap_done(grp_qrf_alt_fu_913_ap_done),
    .ap_idle(grp_qrf_alt_fu_913_ap_idle),
    .ap_ready(grp_qrf_alt_fu_913_ap_ready),
    .A_M_real_address0(grp_qrf_alt_fu_913_A_M_real_address0),
    .A_M_real_ce0(grp_qrf_alt_fu_913_A_M_real_ce0),
    .A_M_real_q0(eig_mat_M_real_q0),
    .A_M_imag_address0(grp_qrf_alt_fu_913_A_M_imag_address0),
    .A_M_imag_ce0(grp_qrf_alt_fu_913_A_M_imag_ce0),
    .A_M_imag_q0(eig_mat_M_imag_q0),
    .Q_M_real_address0(grp_qrf_alt_fu_913_Q_M_real_address0),
    .Q_M_real_ce0(grp_qrf_alt_fu_913_Q_M_real_ce0),
    .Q_M_real_we0(grp_qrf_alt_fu_913_Q_M_real_we0),
    .Q_M_real_d0(grp_qrf_alt_fu_913_Q_M_real_d0),
    .Q_M_imag_address0(grp_qrf_alt_fu_913_Q_M_imag_address0),
    .Q_M_imag_ce0(grp_qrf_alt_fu_913_Q_M_imag_ce0),
    .Q_M_imag_we0(grp_qrf_alt_fu_913_Q_M_imag_we0),
    .Q_M_imag_d0(grp_qrf_alt_fu_913_Q_M_imag_d0),
    .R_M_real_address0(grp_qrf_alt_fu_913_R_M_real_address0),
    .R_M_real_ce0(grp_qrf_alt_fu_913_R_M_real_ce0),
    .R_M_real_we0(grp_qrf_alt_fu_913_R_M_real_we0),
    .R_M_real_d0(grp_qrf_alt_fu_913_R_M_real_d0),
    .R_M_imag_address0(grp_qrf_alt_fu_913_R_M_imag_address0),
    .R_M_imag_ce0(grp_qrf_alt_fu_913_R_M_imag_ce0),
    .R_M_imag_we0(grp_qrf_alt_fu_913_R_M_imag_we0),
    .R_M_imag_d0(grp_qrf_alt_fu_913_R_M_imag_d0)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_931_p0),
    .din1(grp_fu_931_p1),
    .opcode(grp_fu_931_opcode),
    .ce(1'b1),
    .dout(grp_fu_931_p2)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_935_p0),
    .din1(grp_fu_935_p1),
    .opcode(grp_fu_935_opcode),
    .ce(1'b1),
    .dout(grp_fu_935_p2)
);

music_fsub_32ns_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3rcU_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_i_i_reg_2486),
    .din1(tmp_8_i_i_reg_2491),
    .ce(1'b1),
    .dout(grp_fu_943_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_949_p0),
    .din1(grp_fu_949_p1),
    .ce(1'b1),
    .dout(grp_fu_949_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_955_p0),
    .din1(grp_fu_955_p1),
    .ce(1'b1),
    .dout(grp_fu_955_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_961_p0),
    .din1(grp_fu_961_p1),
    .ce(1'b1),
    .dout(grp_fu_961_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_967_p0),
    .din1(grp_fu_967_p1),
    .ce(1'b1),
    .dout(grp_fu_967_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_987_p0),
    .din1(Rx_temp_M_real_q0),
    .ce(1'b1),
    .dout(grp_fu_987_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_992_p0),
    .din1(Rx_temp_M_imag_q0),
    .ce(1'b1),
    .dout(grp_fu_992_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1003_p0),
    .din1(grp_fu_1003_p1),
    .ce(1'b1),
    .dout(grp_fu_1003_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1008_p0),
    .din1(grp_fu_1008_p1),
    .ce(1'b1),
    .dout(grp_fu_1008_p2)
);

music_fsqrt_32ns_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsqrt_32ns_qcK_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(p_x_assign_reg_845),
    .ce(1'b1),
    .dout(grp_fu_1015_p2)
);

music_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
music_mux_42_32_1_1_U161(
    .din0(eigval_0_1_reg_2252),
    .din1(eigval_1_1_reg_2246),
    .din2(eigval_2_1_reg_2240),
    .din3(eigval_3_1_reg_2234),
    .din4(trunc_ln39_reg_2229),
    .dout(p_y_read_assign_fu_1653_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_0_preg <= eigval_0_0_reg_743;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_1_preg <= eigval_1_0_reg_753;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_2_preg <= eigval_2_0_reg_763;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_3_preg <= eigval_3_0_reg_773;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_qrf_alt_fu_913_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln25_fu_1328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_qrf_alt_fu_913_ap_start_reg <= 1'b1;
        end else if ((grp_qrf_alt_fu_913_ap_ready == 1'b1)) begin
            grp_qrf_alt_fu_913_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        complex_M_imag_read_2_reg_869 <= grp_fu_935_p2;
    end else if (((tmp_48_fu_1809_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        complex_M_imag_read_2_reg_869 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        complex_M_imag_read_reg_706 <= grp_fu_935_p2;
    end else if (((icmp_ln28_fu_1364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        complex_M_imag_read_reg_706 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        complex_M_real_read_2_reg_881 <= grp_fu_931_p2;
    end else if (((tmp_48_fu_1809_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        complex_M_real_read_2_reg_881 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        complex_M_real_read_reg_719 <= grp_fu_931_p2;
    end else if (((icmp_ln28_fu_1364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        complex_M_real_read_reg_719 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        count_0_reg_783 <= 3'd0;
    end else if (((icmp_ln67_fu_1944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state171))) begin
        count_0_reg_783 <= count_reg_2202;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_0_0_reg_743 <= eigval_0_read;
    end else if (((icmp_ln67_fu_1944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state171))) begin
        eigval_0_0_reg_743 <= eigval_0_1_reg_2252;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_1_0_reg_753 <= eigval_1_read;
    end else if (((icmp_ln67_fu_1944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state171))) begin
        eigval_1_0_reg_753 <= eigval_1_1_reg_2246;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_2_0_reg_763 <= eigval_2_read;
    end else if (((icmp_ln67_fu_1944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state171))) begin
        eigval_2_0_reg_763 <= eigval_2_1_reg_2240;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_3_0_reg_773 <= eigval_3_read;
    end else if (((icmp_ln67_fu_1944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state171))) begin
        eigval_3_0_reg_773 <= eigval_3_1_reg_2234;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i16_0_reg_673 <= 5'd0;
    end else if (((icmp_ln27_fu_1340_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i16_0_reg_673 <= i_10_reg_2105;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i17_0_reg_684 <= i_11_reg_2113;
    end else if (((grp_qrf_alt_fu_913_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i17_0_reg_684 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i19_0_reg_795 <= i_12_reg_2261;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        i19_0_reg_795 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state196)) begin
        i24_0_reg_902 <= i_14_reg_2528;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        i24_0_reg_902 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_1_fu_1271_p2 == 1'd1) & (icmp_ln14_fu_1265_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_0_reg_651 <= 3'd0;
    end else if (((icmp_ln20_fu_1301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_0_reg_651 <= i_reg_2066;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        j18_0_reg_695 <= j_7_reg_2127;
    end else if (((icmp_ln27_fu_1340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        j18_0_reg_695 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        j21_0_reg_818 <= j_8_reg_2337;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        j21_0_reg_818 <= zext_ln43_reg_2293;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_1704_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        j22_0_in_reg_827 <= zext_ln43_reg_2293;
    end else if (((icmp_ln50_fu_1768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        j22_0_in_reg_827 <= j_10_reg_2342;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        j23_0_in_reg_893 <= j_9_reg_2436;
    end else if (((tmp_48_fu_1809_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        j23_0_in_reg_893 <= sext_ln57_fu_1805_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        j_0_reg_662 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_662 <= j_reg_2079;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_1614_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        j_11_reg_806 <= 2'd0;
    end else if (((icmp_ln48_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        j_11_reg_806 <= i_13_reg_2303;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_0_reg_732 <= k_reg_2150;
    end else if (((icmp_ln28_fu_1364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        k_0_reg_732 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        m_0_reg_857 <= m_reg_2464;
    end else if (((icmp_ln43_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        m_0_reg_857 <= 3'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        p_x_assign_reg_845 <= grp_fu_931_p2;
    end else if (((icmp_ln43_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        p_x_assign_reg_845 <= 32'd1065353216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_1151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln11_1_reg_571 <= add_ln11_1_fu_1131_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln11_1_reg_571 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_1151_p2 == 1'd1) & (icmp_ln11_1_fu_1157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln11_reg_559 <= add_ln11_reg_1999;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln11_reg_559 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln12_fu_1189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln12_1_reg_594 <= add_ln12_1_fu_1169_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln12_1_reg_594 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_1_fu_1157_p2 == 1'd1) & (icmp_ln11_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln12_reg_582 <= 2'd0;
    end else if (((icmp_ln12_fu_1189_p2 == 1'd1) & (icmp_ln12_1_fu_1195_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln12_reg_582 <= add_ln12_reg_2015;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln13_1_reg_617 <= add_ln13_1_fu_1207_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_ln13_1_reg_617 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln12_1_fu_1195_p2 == 1'd1) & (icmp_ln12_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln13_reg_605 <= 2'd0;
    end else if (((icmp_ln13_fu_1227_p2 == 1'd1) & (icmp_ln13_1_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln13_reg_605 <= add_ln13_reg_2031;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_1265_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln14_1_reg_640 <= add_ln14_1_fu_1245_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_ln14_1_reg_640 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_1_fu_1233_p2 == 1'd1) & (icmp_ln13_fu_1227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln14_reg_628 <= 2'd0;
    end else if (((icmp_ln14_fu_1265_p2 == 1'd1) & (icmp_ln14_1_fu_1271_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln14_reg_628 <= add_ln14_reg_2047;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        q_0_reg_836 <= q_1_reg_2388;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        q_0_reg_836 <= zext_ln43_reg_2293;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_1704_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        Rx_temp_M_imag_addr_4_reg_2332 <= sext_ln46_fu_1719_p1;
        Rx_temp_M_real_addr_4_reg_2327 <= sext_ln46_fu_1719_p1;
        j_8_reg_2337 <= j_8_fu_1725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_48_fu_1809_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        Rx_temp_M_imag_addr_5_reg_2431 <= zext_ln62_fu_1850_p1;
        Rx_temp_M_real_addr_5_reg_2426 <= zext_ln62_fu_1850_p1;
        U_M_imag_addr_2_reg_2421 <= zext_ln64_1_fu_1838_p1;
        U_M_real_addr_2_reg_2416 <= zext_ln64_1_fu_1838_p1;
        sext_ln64_reg_2411[5 : 2] <= sext_ln64_fu_1829_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        Rx_temp_M_imag_addr_8_reg_2398 <= sext_ln51_fu_1800_p1;
        Rx_temp_M_real_addr_8_reg_2393 <= sext_ln51_fu_1800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_1944_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state171))) begin
        U_M_imag_addr_4_reg_2538 <= zext_ln68_1_fu_1973_p1;
        U_M_real_addr_4_reg_2533 <= zext_ln68_1_fu_1973_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        U_M_imag_addr_reg_2224 <= zext_ln1067_4_fu_1514_p1;
        U_M_real_addr_reg_2219 <= zext_ln1067_4_fu_1514_p1;
        eigval_0_1_reg_2252 <= eigval_0_1_fu_1606_p3;
        eigval_1_1_reg_2246 <= eigval_1_1_fu_1582_p3;
        eigval_2_1_reg_2240 <= eigval_2_1_fu_1566_p3;
        eigval_3_1_reg_2234 <= eigval_3_1_fu_1558_p3;
        trunc_ln39_reg_2229 <= trunc_ln39_fu_1520_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln11_reg_1999 <= add_ln11_fu_1125_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln12_reg_2015 <= add_ln12_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln13_reg_2031 <= add_ln13_fu_1201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln14_reg_2047 <= add_ln14_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln50_fu_1768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        add_ln51_reg_2373 <= add_ln51_fu_1778_p2;
        q_1_reg_2388 <= q_1_fu_1794_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        count_reg_2202 <= count_fu_1447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_1364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        eig_mat_M_imag_addr_2_reg_2142 <= zext_ln34_1_fu_1385_p1;
        eig_mat_M_real_addr_3_reg_2137 <= zext_ln34_1_fu_1385_p1;
        zext_ln34_reg_2132[2 : 0] <= zext_ln34_fu_1376_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_10_reg_2105 <= i_10_fu_1334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_11_reg_2113 <= i_11_fu_1346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_12_reg_2261 <= i_12_fu_1620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_13_reg_2303 <= i_13_fu_1672_p2;
        zext_ln43_reg_2293[1 : 0] <= zext_ln43_fu_1662_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state171)) begin
        i_14_reg_2528 <= i_14_fu_1950_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_2066 <= i_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        j_10_reg_2342 <= j_10_fu_1731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_7_reg_2127 <= j_7_fu_1370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        j_9_reg_2436 <= j_9_fu_1856_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_reg_2079 <= j_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_reg_2150 <= k_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_fu_1862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        m_reg_2464 <= m_fu_1906_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state161)) begin
        midsum_reg_2518 <= grp_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_r_M_real_reg_2283 <= Rx_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_1614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        p_y_read_assign_reg_2278 <= p_y_read_assign_fu_1653_p6;
        zext_ln41_2_reg_2266[5 : 0] <= zext_ln41_2_fu_1648_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1021 <= grp_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1026 <= grp_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1031 <= grp_fu_961_p2;
        reg_1036 <= grp_fu_967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_1041 <= grp_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_1050 <= grp_fu_935_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state61))) begin
        reg_1059 <= grp_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state43))) begin
        reg_1071 <= Rx_temp_M_real_q0;
        reg_1081 <= Rx_temp_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state89))) begin
        reg_1091 <= Rx_temp_M_real_q0;
        reg_1100 <= Rx_temp_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        sext_ln49_cast_reg_2365[5 : 2] <= sext_ln49_cast_fu_1761_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        sum_M_imag_reg_2507 <= grp_fu_1008_p2;
        sum_M_real_reg_2501 <= grp_fu_1003_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        tmp_7_i_i_reg_2486 <= grp_fu_987_p2;
        tmp_8_i_i_reg_2491 <= grp_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        tmp_9_i_i_reg_2496 <= grp_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1737_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        trunc_ln49_reg_2350 <= trunc_ln49_fu_1743_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_1441_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        zext_ln1067_reg_2207[2 : 0] <= zext_ln1067_fu_1453_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        zext_ln20_reg_2071[4 : 2] <= zext_ln20_fu_1297_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_1301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        zext_ln21_1_reg_2084[5 : 0] <= zext_ln21_1_fu_1322_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_1340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        zext_ln28_reg_2118[4 : 2] <= zext_ln28_fu_1360_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        zext_ln44_reg_2318[3 : 2] <= zext_ln44_fu_1700_p1[3 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_temp_M_imag_address0 = zext_ln32_2_fu_1424_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_imag_address0 = zext_ln1027_fu_1145_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_address0 = grp_qrf_alt_fu_913_Q_M_imag_address0;
    end else begin
        Q_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state3))) begin
        Q_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_ce0 = grp_qrf_alt_fu_913_Q_M_imag_ce0;
    end else begin
        Q_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_d0 = grp_qrf_alt_fu_913_Q_M_imag_d0;
    end else begin
        Q_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_we0 = grp_qrf_alt_fu_913_Q_M_imag_we0;
    end else begin
        Q_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_temp_M_real_address0 = zext_ln32_2_fu_1424_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_real_address0 = zext_ln1027_fu_1145_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_address0 = grp_qrf_alt_fu_913_Q_M_real_address0;
    end else begin
        Q_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state3))) begin
        Q_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_ce0 = grp_qrf_alt_fu_913_Q_M_real_ce0;
    end else begin
        Q_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_d0 = grp_qrf_alt_fu_913_Q_M_real_d0;
    end else begin
        Q_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_we0 = grp_qrf_alt_fu_913_Q_M_real_we0;
    end else begin
        Q_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        R_temp_M_imag_address0 = zext_ln32_3_fu_1435_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_imag_address0 = zext_ln1027_9_fu_1183_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_address0 = grp_qrf_alt_fu_913_R_M_imag_address0;
    end else begin
        R_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5))) begin
        R_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_ce0 = grp_qrf_alt_fu_913_R_M_imag_ce0;
    end else begin
        R_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_d0 = grp_qrf_alt_fu_913_R_M_imag_d0;
    end else begin
        R_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_we0 = grp_qrf_alt_fu_913_R_M_imag_we0;
    end else begin
        R_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        R_temp_M_real_address0 = zext_ln32_3_fu_1435_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_real_address0 = zext_ln1027_9_fu_1183_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_address0 = grp_qrf_alt_fu_913_R_M_real_address0;
    end else begin
        R_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5))) begin
        R_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_ce0 = grp_qrf_alt_fu_913_R_M_real_ce0;
    end else begin
        R_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_d0 = grp_qrf_alt_fu_913_R_M_real_d0;
    end else begin
        R_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_we0 = grp_qrf_alt_fu_913_R_M_real_we0;
    end else begin
        R_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        Rx_M_imag_address0 = zext_ln41_2_reg_2266;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Rx_M_imag_address0 = zext_ln21_1_fu_1322_p1;
    end else begin
        Rx_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state40))) begin
        Rx_M_imag_ce0 = 1'b1;
    end else begin
        Rx_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        Rx_M_real_address0 = zext_ln41_2_fu_1648_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Rx_M_real_address0 = zext_ln21_1_fu_1322_p1;
    end else begin
        Rx_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state11))) begin
        Rx_M_real_ce0 = 1'b1;
    end else begin
        Rx_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln59_fu_1862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_5_reg_2431;
    end else if (((icmp_ln59_fu_1862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        Rx_temp_M_imag_address0 = sext_ln60_1_fu_1900_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_8_reg_2398;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        Rx_temp_M_imag_address0 = sext_ln51_fu_1800_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Rx_temp_M_imag_address0 = sext_ln51_1_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        Rx_temp_M_imag_address0 = sext_ln49_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_4_reg_2332;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        Rx_temp_M_imag_address0 = sext_ln46_fu_1719_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        Rx_temp_M_imag_address0 = zext_ln44_1_fu_1686_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        Rx_temp_M_imag_address0 = zext_ln41_2_reg_2266;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Rx_temp_M_imag_address0 = zext_ln21_1_reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_imag_address0 = zext_ln1027_10_fu_1221_p1;
    end else begin
        Rx_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln59_fu_1862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97)) | ((icmp_ln59_fu_1862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97)))) begin
        Rx_temp_M_imag_ce0 = 1'b1;
    end else begin
        Rx_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        Rx_temp_M_imag_d0 = reg_1050;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        Rx_temp_M_imag_d0 = grp_fu_1008_p2;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state12))) begin
        Rx_temp_M_imag_d0 = Rx_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_imag_d0 = 32'd0;
    end else begin
        Rx_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state12))) begin
        Rx_temp_M_imag_we0 = 1'b1;
    end else begin
        Rx_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln59_fu_1862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_5_reg_2426;
    end else if (((icmp_ln59_fu_1862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        Rx_temp_M_real_address0 = sext_ln60_1_fu_1900_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_8_reg_2393;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        Rx_temp_M_real_address0 = sext_ln51_fu_1800_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Rx_temp_M_real_address0 = sext_ln51_1_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        Rx_temp_M_real_address0 = sext_ln49_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_4_reg_2327;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        Rx_temp_M_real_address0 = sext_ln46_fu_1719_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        Rx_temp_M_real_address0 = zext_ln44_1_fu_1686_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        Rx_temp_M_real_address0 = zext_ln41_2_reg_2266;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Rx_temp_M_real_address0 = zext_ln21_1_reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_real_address0 = zext_ln1027_10_fu_1221_p1;
    end else begin
        Rx_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln59_fu_1862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97)) | ((icmp_ln59_fu_1862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97)))) begin
        Rx_temp_M_real_ce0 = 1'b1;
    end else begin
        Rx_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        Rx_temp_M_real_d0 = grp_fu_1003_p2;
    end else if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state41))) begin
        Rx_temp_M_real_d0 = reg_1041;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Rx_temp_M_real_d0 = Rx_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_real_d0 = 32'd0;
    end else begin
        Rx_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state12))) begin
        Rx_temp_M_real_we0 = 1'b1;
    end else begin
        Rx_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state196)) begin
        U_M_imag_address0 = U_M_imag_addr_4_reg_2538;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        U_M_imag_address0 = zext_ln68_1_fu_1973_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        U_M_imag_address0 = U_M_imag_addr_2_reg_2421;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        U_M_imag_address0 = sext_ln60_fu_1889_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        U_M_imag_address0 = U_M_imag_addr_reg_2224;
    end else begin
        U_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state196))) begin
        U_M_imag_ce0 = 1'b1;
    end else begin
        U_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state196))) begin
        U_M_imag_d0 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        U_M_imag_d0 = 32'd0;
    end else begin
        U_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state196) | ((icmp_ln43_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42)))) begin
        U_M_imag_we0 = 1'b1;
    end else begin
        U_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state196)) begin
        U_M_real_address0 = U_M_real_addr_4_reg_2533;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        U_M_real_address0 = zext_ln68_1_fu_1973_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        U_M_real_address0 = U_M_real_addr_2_reg_2416;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        U_M_real_address0 = sext_ln60_fu_1889_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        U_M_real_address0 = U_M_real_addr_reg_2219;
    end else begin
        U_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state196))) begin
        U_M_real_ce0 = 1'b1;
    end else begin
        U_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state196))) begin
        U_M_real_d0 = grp_fu_1003_p2;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        U_M_real_d0 = 32'd1065353216;
    end else begin
        U_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state196) | ((icmp_ln43_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42)))) begin
        U_M_real_we0 = 1'b1;
    end else begin
        U_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_0 = eigval_0_0_reg_743;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_1 = eigval_1_0_reg_753;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_2 = eigval_2_0_reg_763;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_3 = eigval_3_0_reg_773;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_imag_address0 = eig_mat_M_imag_addr_2_reg_2142;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_imag_address0 = zext_ln21_1_reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_imag_address0 = zext_ln1027_11_fu_1259_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_imag_address0 = grp_qrf_alt_fu_913_A_M_imag_address0;
    end else begin
        eig_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12))) begin
        eig_mat_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_imag_ce0 = grp_qrf_alt_fu_913_A_M_imag_ce0;
    end else begin
        eig_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_imag_d0 = complex_M_imag_read_reg_706;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_imag_d0 = Rx_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_imag_d0 = 32'd0;
    end else begin
        eig_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln31_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        eig_mat_M_imag_we0 = 1'b1;
    end else begin
        eig_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        eig_mat_M_real_address0 = zext_ln1044_1_fu_1475_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_real_address0 = eig_mat_M_real_addr_3_reg_2137;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_real_address0 = zext_ln21_1_reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_real_address0 = zext_ln1027_11_fu_1259_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_real_address0 = grp_qrf_alt_fu_913_A_M_real_address0;
    end else begin
        eig_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12))) begin
        eig_mat_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_real_ce0 = grp_qrf_alt_fu_913_A_M_real_ce0;
    end else begin
        eig_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_real_d0 = complex_M_real_read_reg_719;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_real_d0 = Rx_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_real_d0 = 32'd0;
    end else begin
        eig_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln31_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        eig_mat_M_real_we0 = 1'b1;
    end else begin
        eig_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_1003_p0 = reg_1041;
    end else if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_1003_p0 = reg_1059;
    end else begin
        grp_fu_1003_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_1003_p1 = reg_1050;
    end else if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_1003_p1 = reg_1041;
    end else begin
        grp_fu_1003_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_1008_p0 = tmp_9_i_i_reg_2496;
    end else if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_1008_p0 = reg_1050;
    end else begin
        grp_fu_1008_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_1008_p1 = reg_1050;
    end else if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_1008_p1 = reg_1041;
    end else begin
        grp_fu_1008_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_931_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_931_opcode = 2'd0;
    end else begin
        grp_fu_931_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_931_p0 = p_x_assign_reg_845;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_fu_931_p0 = complex_M_real_read_2_reg_881;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_931_p0 = reg_1091;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_931_p0 = p_r_M_real_reg_2283;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_931_p0 = complex_M_real_read_reg_719;
    end else if (((1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_931_p0 = reg_1021;
    end else begin
        grp_fu_931_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_931_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_931_p1 = p_y_read_assign_reg_2278;
    end else if (((1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_931_p1 = reg_1041;
    end else if (((1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_931_p1 = reg_1026;
    end else begin
        grp_fu_931_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_935_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_935_opcode = 2'd0;
    end else begin
        grp_fu_935_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_fu_935_p0 = complex_M_imag_read_2_reg_869;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_935_p0 = reg_1100;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_935_p0 = complex_M_imag_read_reg_706;
    end else if (((1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_935_p0 = reg_1031;
    end else begin
        grp_fu_935_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_935_p1 = reg_1050;
    end else if (((1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_935_p1 = reg_1036;
    end else begin
        grp_fu_935_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_949_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state162)) begin
        grp_fu_949_p0 = midsum_reg_2518;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        grp_fu_949_p0 = sum_M_real_reg_2501;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_fu_949_p0 = p_r_M_real_14_fu_1922_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_949_p0 = reg_1071;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_949_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_949_p0 = R_temp_M_real_q0;
    end else begin
        grp_fu_949_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state162))) begin
        grp_fu_949_p1 = midsum_reg_2518;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        grp_fu_949_p1 = sum_M_real_reg_2501;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_949_p1 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_949_p1 = reg_1071;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_949_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_949_p1 = Q_temp_M_real_q0;
    end else begin
        grp_fu_949_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_955_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        grp_fu_955_p0 = sum_M_imag_reg_2507;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_fu_955_p0 = p_r_M_imag_13_fu_1938_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_955_p0 = reg_1081;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_955_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_955_p0 = R_temp_M_imag_q0;
    end else begin
        grp_fu_955_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_955_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        grp_fu_955_p1 = sum_M_imag_reg_2507;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_955_p1 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_955_p1 = reg_1081;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_955_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_955_p1 = Q_temp_M_imag_q0;
    end else begin
        grp_fu_955_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_961_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_fu_961_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_961_p0 = reg_1081;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state98))) begin
        grp_fu_961_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_961_p0 = R_temp_M_imag_q0;
    end else begin
        grp_fu_961_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_961_p1 = midsum_reg_2518;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_961_p1 = U_M_real_q0;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state112))) begin
        grp_fu_961_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_961_p1 = reg_1071;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_961_p1 = Q_temp_M_real_q0;
    end else begin
        grp_fu_961_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_967_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_fu_967_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_967_p0 = reg_1071;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state98))) begin
        grp_fu_967_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_967_p0 = R_temp_M_real_q0;
    end else begin
        grp_fu_967_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_967_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_967_p1 = U_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state112))) begin
        grp_fu_967_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_967_p1 = reg_1081;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_967_p1 = Q_temp_M_imag_q0;
    end else begin
        grp_fu_967_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_1_fu_1157_p2 == 1'd1) & (icmp_ln11_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln11_fu_1151_p2 == 1'd1) & (icmp_ln11_1_fu_1157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln12_1_fu_1195_p2 == 1'd1) & (icmp_ln12_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln12_fu_1189_p2 == 1'd1) & (icmp_ln12_1_fu_1195_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln13_1_fu_1233_p2 == 1'd1) & (icmp_ln13_fu_1227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((icmp_ln13_fu_1227_p2 == 1'd1) & (icmp_ln13_1_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln14_1_fu_1271_p2 == 1'd1) & (icmp_ln14_fu_1265_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((icmp_ln14_fu_1265_p2 == 1'd1) & (icmp_ln14_1_fu_1271_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln19_fu_1277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln20_fu_1301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln25_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_qrf_alt_fu_913_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln27_fu_1340_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln28_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln31_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln38_fu_1441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln40_fu_1614_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state42 : begin
            if (((icmp_ln43_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln45_fu_1704_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state78 : begin
            if (((icmp_ln48_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((icmp_ln50_fu_1768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state96 : begin
            if (((tmp_48_fu_1809_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end
        end
        ap_ST_fsm_state97 : begin
            if (((icmp_ln59_fu_1862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            if (((icmp_ln67_fu_1944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state171))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state172;
            end
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1044_fu_1469_p2 = (zext_ln1044_fu_1465_p1 + zext_ln1067_fu_1453_p1);

assign add_ln11_1_fu_1131_p2 = (phi_ln11_1_reg_571 + 2'd1);

assign add_ln11_fu_1125_p2 = (phi_ln11_reg_559 + 2'd1);

assign add_ln12_1_fu_1169_p2 = (phi_ln12_1_reg_594 + 2'd1);

assign add_ln12_fu_1163_p2 = (phi_ln12_reg_582 + 2'd1);

assign add_ln13_1_fu_1207_p2 = (phi_ln13_1_reg_617 + 2'd1);

assign add_ln13_fu_1201_p2 = (phi_ln13_reg_605 + 2'd1);

assign add_ln14_1_fu_1245_p2 = (phi_ln14_1_reg_640 + 2'd1);

assign add_ln14_fu_1239_p2 = (phi_ln14_reg_628 + 2'd1);

assign add_ln21_fu_1317_p2 = (zext_ln20_reg_2071 + zext_ln21_fu_1313_p1);

assign add_ln32_1_fu_1430_p2 = (zext_ln32_fu_1403_p1 + zext_ln28_reg_2118);

assign add_ln32_fu_1419_p2 = (zext_ln34_reg_2132 + zext_ln32_1_fu_1415_p1);

assign add_ln34_fu_1380_p2 = (zext_ln28_reg_2118 + zext_ln34_fu_1376_p1);

assign add_ln41_fu_1642_p2 = (zext_ln41_fu_1626_p1 + zext_ln41_1_fu_1638_p1);

assign add_ln46_fu_1714_p2 = (zext_ln44_reg_2318 + trunc_ln46_fu_1710_p1);

assign add_ln51_1_fu_1783_p2 = (zext_ln44_reg_2318 + trunc_ln51_fu_1774_p1);

assign add_ln51_fu_1778_p2 = (sext_ln49_cast_reg_2365 + trunc_ln51_fu_1774_p1);

assign add_ln60_1_fu_1895_p2 = ($signed(sext_ln64_reg_2411) + $signed(trunc_ln60_fu_1868_p1));

assign add_ln60_fu_1884_p2 = (sext_ln60_1_cast_fu_1876_p3 + zext_ln1067_reg_2207);

assign add_ln62_fu_1844_p2 = ($signed(sext_ln64_fu_1829_p1) + $signed(zext_ln64_fu_1817_p1));

assign add_ln64_fu_1833_p2 = ($signed(sext_ln64_fu_1829_p1) + $signed(zext_ln1067_reg_2207));

assign add_ln68_fu_1968_p2 = (zext_ln1067_reg_2207 + zext_ln68_fu_1964_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd175];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd180];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd195];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign bitcast_ln444_3_fu_1928_p1 = complex_M_imag_read_2_reg_869;

assign bitcast_ln444_fu_1912_p1 = complex_M_real_read_2_reg_881;

assign count_fu_1447_p2 = (count_0_reg_783 + 3'd1);

assign eigval_0_1_fu_1606_p3 = ((icmp_ln39_2_fu_1552_p2[0:0] === 1'b1) ? eigval_0_0_reg_743 : select_ln39_4_fu_1598_p3);

assign eigval_1_1_fu_1582_p3 = ((icmp_ln39_2_fu_1552_p2[0:0] === 1'b1) ? eigval_1_0_reg_753 : select_ln39_2_fu_1574_p3);

assign eigval_2_1_fu_1566_p3 = ((icmp_ln39_2_fu_1552_p2[0:0] === 1'b1) ? eig_mat_M_real_q0 : eigval_2_0_reg_763);

assign eigval_3_1_fu_1558_p3 = ((icmp_ln39_2_fu_1552_p2[0:0] === 1'b1) ? eigval_3_0_reg_773 : select_ln39_1_fu_1544_p3);

assign grp_fu_987_p0 = xor_ln444_1_fu_1932_p2;

assign grp_fu_992_p0 = xor_ln444_fu_1916_p2;

assign grp_qrf_alt_fu_913_ap_start = grp_qrf_alt_fu_913_ap_start_reg;

assign i_10_fu_1334_p2 = (i16_0_reg_673 + 5'd1);

assign i_11_fu_1346_p2 = (i17_0_reg_684 + 3'd1);

assign i_12_fu_1620_p2 = (i19_0_reg_795 + 3'd1);

assign i_13_fu_1672_p2 = (j_11_reg_806 + 2'd1);

assign i_14_fu_1950_p2 = (i24_0_reg_902 + 3'd1);

assign i_fu_1283_p2 = (i_0_reg_651 + 3'd1);

assign icmp_ln11_1_fu_1157_p2 = ((phi_ln11_reg_559 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_1151_p2 = ((phi_ln11_1_reg_571 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_1195_p2 = ((phi_ln12_reg_582 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_1189_p2 = ((phi_ln12_1_reg_594 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_1_fu_1233_p2 = ((phi_ln13_reg_605 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1227_p2 = ((phi_ln13_1_reg_617 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_1_fu_1271_p2 = ((phi_ln14_reg_628 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_1265_p2 = ((phi_ln14_1_reg_640 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_1277_p2 = ((i_0_reg_651 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_1301_p2 = ((j_0_reg_662 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1328_p2 = ((i16_0_reg_673 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_1340_p2 = ((i17_0_reg_684 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1364_p2 = ((j18_0_reg_695 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_1391_p2 = ((k_0_reg_732 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_1441_p2 = ((count_0_reg_783 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln39_1_fu_1538_p2 = ((trunc_ln39_fu_1520_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln39_2_fu_1552_p2 = ((trunc_ln39_fu_1520_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_1524_p2 = ((trunc_ln39_fu_1520_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_1614_p2 = ((i19_0_reg_795 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1666_p2 = ((j_11_reg_806 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1704_p2 = ((j21_0_reg_818 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1737_p2 = ((j22_0_in_reg_827 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1768_p2 = ((q_0_reg_836 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_1862_p2 = ((j23_0_in_reg_893 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1944_p2 = ((i24_0_reg_902 == 3'd4) ? 1'b1 : 1'b0);

assign j_10_fu_1731_p2 = (j22_0_in_reg_827 + 32'd1);

assign j_7_fu_1370_p2 = (j18_0_reg_695 + 3'd1);

assign j_8_fu_1725_p2 = (32'd1 + j21_0_reg_818);

assign j_9_fu_1856_p2 = (j23_0_in_reg_893 + 32'd1);

assign j_fu_1307_p2 = (j_0_reg_662 + 3'd1);

assign k_fu_1397_p2 = (k_0_reg_732 + 3'd1);

assign m_fu_1906_p2 = ($signed(m_0_reg_857) + $signed(3'd7));

assign p_r_M_imag_13_fu_1938_p1 = xor_ln444_1_fu_1932_p2;

assign p_r_M_real_14_fu_1922_p1 = xor_ln444_fu_1916_p2;

assign q_1_fu_1794_p2 = (32'd1 + q_0_reg_836);

assign select_ln39_1_fu_1544_p3 = ((icmp_ln39_1_fu_1538_p2[0:0] === 1'b1) ? eigval_3_0_reg_773 : select_ln39_fu_1530_p3);

assign select_ln39_2_fu_1574_p3 = ((icmp_ln39_1_fu_1538_p2[0:0] === 1'b1) ? eig_mat_M_real_q0 : eigval_1_0_reg_753);

assign select_ln39_3_fu_1590_p3 = ((icmp_ln39_fu_1524_p2[0:0] === 1'b1) ? eig_mat_M_real_q0 : eigval_0_0_reg_743);

assign select_ln39_4_fu_1598_p3 = ((icmp_ln39_1_fu_1538_p2[0:0] === 1'b1) ? eigval_0_0_reg_743 : select_ln39_3_fu_1590_p3);

assign select_ln39_fu_1530_p3 = ((icmp_ln39_fu_1524_p2[0:0] === 1'b1) ? eigval_3_0_reg_773 : eig_mat_M_real_q0);

assign sext_ln1067_fu_1510_p1 = $signed(xor_ln1067_fu_1504_p2);

assign sext_ln46_fu_1719_p1 = $signed(add_ln46_fu_1714_p2);

assign sext_ln49_cast_fu_1761_p3 = {{trunc_ln49_reg_2350}, {2'd0}};

assign sext_ln49_fu_1755_p1 = $signed(tmp_63_fu_1747_p3);

assign sext_ln51_1_fu_1788_p1 = $signed(add_ln51_1_fu_1783_p2);

assign sext_ln51_fu_1800_p1 = $signed(add_ln51_reg_2373);

assign sext_ln57_fu_1805_p1 = m_0_reg_857;

assign sext_ln60_1_cast_fu_1876_p3 = {{trunc_ln60_1_fu_1872_p1}, {2'd0}};

assign sext_ln60_1_fu_1900_p1 = $signed(add_ln60_1_fu_1895_p2);

assign sext_ln60_fu_1889_p1 = $signed(add_ln60_fu_1884_p2);

assign sext_ln64_fu_1829_p1 = $signed(tmp_61_fu_1821_p3);

assign tmp_45_fu_1175_p3 = {{phi_ln12_reg_582}, {phi_ln12_1_reg_594}};

assign tmp_46_fu_1213_p3 = {{phi_ln13_reg_605}, {phi_ln13_1_reg_617}};

assign tmp_47_fu_1251_p3 = {{phi_ln14_reg_628}, {phi_ln14_1_reg_640}};

assign tmp_48_fu_1809_p3 = m_0_reg_857[32'd2];

assign tmp_53_fu_1137_p3 = {{phi_ln11_reg_559}, {phi_ln11_1_reg_571}};

assign tmp_54_fu_1289_p3 = {{i_0_reg_651}, {2'd0}};

assign tmp_55_fu_1457_p3 = {{count_0_reg_783}, {2'd0}};

assign tmp_56_fu_1352_p3 = {{i17_0_reg_684}, {2'd0}};

assign tmp_57_fu_1630_p3 = {{i19_0_reg_795}, {2'd0}};

assign tmp_58_fu_1692_p3 = {{j_11_reg_806}, {2'd0}};

assign tmp_59_fu_1678_p3 = {{j_11_reg_806}, {j_11_reg_806}};

assign tmp_60_fu_1407_p3 = {{k_0_reg_732}, {2'd0}};

assign tmp_61_fu_1821_p3 = {{m_0_reg_857}, {2'd0}};

assign tmp_62_fu_1956_p3 = {{i24_0_reg_902}, {2'd0}};

assign tmp_63_fu_1747_p3 = {{j_10_fu_1731_p2}, {j_11_reg_806}};

assign trunc_ln39_fu_1520_p1 = count_0_reg_783[1:0];

assign trunc_ln46_fu_1710_p1 = j21_0_reg_818[5:0];

assign trunc_ln49_fu_1743_p1 = j_10_fu_1731_p2[3:0];

assign trunc_ln51_fu_1774_p1 = q_0_reg_836[5:0];

assign trunc_ln60_1_fu_1872_p1 = j_9_fu_1856_p2[3:0];

assign trunc_ln60_fu_1868_p1 = j_9_fu_1856_p2[5:0];

assign xor_ln1067_fu_1504_p2 = (count_0_reg_783 ^ 3'd4);

assign xor_ln444_1_fu_1932_p2 = (bitcast_ln444_3_fu_1928_p1 ^ 32'd2147483648);

assign xor_ln444_fu_1916_p2 = (bitcast_ln444_fu_1912_p1 ^ 32'd2147483648);

assign zext_ln1027_10_fu_1221_p1 = tmp_46_fu_1213_p3;

assign zext_ln1027_11_fu_1259_p1 = tmp_47_fu_1251_p3;

assign zext_ln1027_9_fu_1183_p1 = tmp_45_fu_1175_p3;

assign zext_ln1027_fu_1145_p1 = tmp_53_fu_1137_p3;

assign zext_ln1044_1_fu_1475_p1 = add_ln1044_fu_1469_p2;

assign zext_ln1044_fu_1465_p1 = tmp_55_fu_1457_p3;

assign zext_ln1067_4_fu_1514_p1 = $unsigned(sext_ln1067_fu_1510_p1);

assign zext_ln1067_fu_1453_p1 = count_0_reg_783;

assign zext_ln20_fu_1297_p1 = tmp_54_fu_1289_p3;

assign zext_ln21_1_fu_1322_p1 = add_ln21_fu_1317_p2;

assign zext_ln21_fu_1313_p1 = j_0_reg_662;

assign zext_ln28_fu_1360_p1 = tmp_56_fu_1352_p3;

assign zext_ln32_1_fu_1415_p1 = tmp_60_fu_1407_p3;

assign zext_ln32_2_fu_1424_p1 = add_ln32_fu_1419_p2;

assign zext_ln32_3_fu_1435_p1 = add_ln32_1_fu_1430_p2;

assign zext_ln32_fu_1403_p1 = k_0_reg_732;

assign zext_ln34_1_fu_1385_p1 = add_ln34_fu_1380_p2;

assign zext_ln34_fu_1376_p1 = j18_0_reg_695;

assign zext_ln41_1_fu_1638_p1 = tmp_57_fu_1630_p3;

assign zext_ln41_2_fu_1648_p1 = add_ln41_fu_1642_p2;

assign zext_ln41_fu_1626_p1 = i19_0_reg_795;

assign zext_ln43_fu_1662_p1 = j_11_reg_806;

assign zext_ln44_1_fu_1686_p1 = tmp_59_fu_1678_p3;

assign zext_ln44_fu_1700_p1 = tmp_58_fu_1692_p3;

assign zext_ln62_fu_1850_p1 = add_ln62_fu_1844_p2;

assign zext_ln64_1_fu_1838_p1 = add_ln64_fu_1833_p2;

assign zext_ln64_fu_1817_p1 = $unsigned(m_0_reg_857);

assign zext_ln68_1_fu_1973_p1 = add_ln68_fu_1968_p2;

assign zext_ln68_fu_1964_p1 = tmp_62_fu_1956_p3;

always @ (posedge ap_clk) begin
    zext_ln20_reg_2071[1:0] <= 2'b00;
    zext_ln20_reg_2071[5] <= 1'b0;
    zext_ln21_1_reg_2084[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln28_reg_2118[1:0] <= 2'b00;
    zext_ln28_reg_2118[5] <= 1'b0;
    zext_ln34_reg_2132[5:3] <= 3'b000;
    zext_ln1067_reg_2207[5:3] <= 3'b000;
    zext_ln41_2_reg_2266[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln43_reg_2293[31:2] <= 30'b000000000000000000000000000000;
    zext_ln44_reg_2318[1:0] <= 2'b00;
    zext_ln44_reg_2318[5:4] <= 2'b00;
    sext_ln49_cast_reg_2365[1:0] <= 2'b00;
    sext_ln64_reg_2411[1:0] <= 2'b00;
end

endmodule //eig_decompose
