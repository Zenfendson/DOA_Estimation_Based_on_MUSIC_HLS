// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scaled_fixed2ieee_1_HH_
#define _scaled_fixed2ieee_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct scaled_fixed2ieee_1 : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<29> > in_V;
    sc_in< sc_lv<9> > prescale;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    scaled_fixed2ieee_1(sc_module_name name);
    SC_HAS_PROCESS(scaled_fixed2ieee_1);

    ~scaled_fixed2ieee_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > out_bits_0_V_fu_190_p5;
    sc_signal< sc_lv<32> > out_bits_0_V_reg_467;
    sc_signal< sc_lv<32> > p_Result_s_fu_214_p5;
    sc_signal< sc_lv<32> > p_Result_s_reg_472;
    sc_signal< sc_lv<2> > i_fu_232_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > c_1_1_fu_276_p3;
    sc_signal< sc_lv<1> > icmp_ln306_fu_226_p2;
    sc_signal< sc_lv<32> > c_1_2_fu_284_p3;
    sc_signal< sc_lv<1> > icmp_ln313_fu_292_p2;
    sc_signal< sc_lv<1> > icmp_ln313_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > i_2_fu_298_p2;
    sc_signal< sc_lv<2> > i_2_reg_499;
    sc_signal< sc_lv<32> > shift_fu_316_p2;
    sc_signal< sc_lv<32> > shift_reg_504;
    sc_signal< sc_lv<29> > r_V_fu_364_p3;
    sc_signal< sc_lv<29> > r_V_reg_510;
    sc_signal< sc_lv<1> > icmp_ln316_fu_372_p2;
    sc_signal< sc_lv<1> > icmp_ln316_reg_516;
    sc_signal< sc_lv<32> > c_0_020_reg_84;
    sc_signal< sc_lv<32> > c_1_019_reg_96;
    sc_signal< sc_lv<2> > i1_0_reg_108;
    sc_signal< sc_lv<29> > p_0107_0_reg_119;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > shift_0_reg_129;
    sc_signal< sc_lv<2> > i2_0_reg_141;
    sc_signal< sc_lv<29> > ap_phi_mux_p_Val2_s_phi_fu_155_p4;
    sc_signal< sc_lv<29> > p_Val2_s_reg_152;
    sc_signal< sc_lv<32> > ap_phi_mux_shift_1_phi_fu_165_p4;
    sc_signal< sc_lv<32> > shift_1_reg_162;
    sc_signal< sc_lv<16> > p_Result_1_fu_172_p4;
    sc_signal< sc_lv<17> > tmp_fu_182_p3;
    sc_signal< sc_lv<13> > trunc_ln566_fu_202_p1;
    sc_signal< sc_lv<14> > tmp_s_fu_206_p3;
    sc_signal< sc_lv<1> > trunc_ln510_fu_238_p1;
    sc_signal< sc_lv<32> > tmp_2_fu_251_p4;
    sc_signal< sc_lv<32> > tmp_1_fu_242_p4;
    sc_signal< sc_lv<32> > p_Result_43_fu_260_p3;
    sc_signal< sc_lv<32> > c_0_fu_268_p3;
    sc_signal< sc_lv<1> > trunc_ln314_fu_304_p1;
    sc_signal< sc_lv<32> > select_ln314_fu_308_p3;
    sc_signal< sc_lv<1> > isNeg_fu_322_p3;
    sc_signal< sc_lv<32> > sub_ln1311_fu_330_p2;
    sc_signal< sc_lv<32> > ush_fu_336_p3;
    sc_signal< sc_lv<29> > ushcast_fu_344_p1;
    sc_signal< sc_lv<29> > ushcast6_fu_354_p1;
    sc_signal< sc_lv<29> > lshr_ln1287_fu_348_p2;
    sc_signal< sc_lv<29> > shl_ln1253_fu_358_p2;
    sc_signal< sc_lv<9> > sub_ln324_fu_378_p2;
    sc_signal< sc_lv<32> > sext_ln324_fu_383_p1;
    sc_signal< sc_lv<32> > newexp_fu_387_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_393_p3;
    sc_signal< sc_lv<1> > icmp_ln1452_fu_401_p2;
    sc_signal< sc_lv<1> > or_ln330_fu_406_p2;
    sc_signal< sc_lv<23> > phitmp1_fu_416_p4;
    sc_signal< sc_lv<8> > empty_fu_412_p1;
    sc_signal< sc_lv<8> > out_exp_V_fu_434_p3;
    sc_signal< sc_lv<23> > significand_V_fu_426_p3;
    sc_signal< sc_lv<32> > p_Result_44_fu_442_p4;
    sc_signal< sc_lv<32> > bitcast_ln348_fu_452_p1;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<9> ap_const_lv9_7F;
    static const sc_lv<29> ap_const_lv29_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_Val2_s_phi_fu_155_p4();
    void thread_ap_phi_mux_shift_1_phi_fu_165_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_bitcast_ln348_fu_452_p1();
    void thread_c_0_fu_268_p3();
    void thread_c_1_1_fu_276_p3();
    void thread_c_1_2_fu_284_p3();
    void thread_empty_fu_412_p1();
    void thread_i_2_fu_298_p2();
    void thread_i_fu_232_p2();
    void thread_icmp_ln1452_fu_401_p2();
    void thread_icmp_ln306_fu_226_p2();
    void thread_icmp_ln313_fu_292_p2();
    void thread_icmp_ln316_fu_372_p2();
    void thread_isNeg_fu_322_p3();
    void thread_lshr_ln1287_fu_348_p2();
    void thread_newexp_fu_387_p2();
    void thread_or_ln330_fu_406_p2();
    void thread_out_bits_0_V_fu_190_p5();
    void thread_out_exp_V_fu_434_p3();
    void thread_p_Result_1_fu_172_p4();
    void thread_p_Result_43_fu_260_p3();
    void thread_p_Result_44_fu_442_p4();
    void thread_p_Result_s_fu_214_p5();
    void thread_phitmp1_fu_416_p4();
    void thread_r_V_fu_364_p3();
    void thread_select_ln314_fu_308_p3();
    void thread_sext_ln324_fu_383_p1();
    void thread_shift_fu_316_p2();
    void thread_shl_ln1253_fu_358_p2();
    void thread_significand_V_fu_426_p3();
    void thread_sub_ln1311_fu_330_p2();
    void thread_sub_ln324_fu_378_p2();
    void thread_tmp_10_fu_393_p3();
    void thread_tmp_1_fu_242_p4();
    void thread_tmp_2_fu_251_p4();
    void thread_tmp_fu_182_p3();
    void thread_tmp_s_fu_206_p3();
    void thread_trunc_ln314_fu_304_p1();
    void thread_trunc_ln510_fu_238_p1();
    void thread_trunc_ln566_fu_202_p1();
    void thread_ush_fu_336_p3();
    void thread_ushcast6_fu_354_p1();
    void thread_ushcast_fu_344_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
