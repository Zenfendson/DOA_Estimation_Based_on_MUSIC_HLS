// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __sin_or_cos_doubleIfE_H__
#define __sin_or_cos_doubleIfE_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct sin_or_cos_doubleIfE_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 33;
  static const unsigned AddressRange = 256;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(sin_or_cos_doubleIfE_ram) {
        ram[0] = "0b000000000000000000000000001011110";
        ram[1] = "0b000000100000011110000011110110111";
        ram[2] = "0b000001000000111100000010011011101";
        ram[3] = "0b000001100001011001110110111011100";
        ram[4] = "0b000010000001110111011100100010110";
        ram[5] = "0b000010100010010100101101111110000";
        ram[6] = "0b000011000010110001100110100000101";
        ram[7] = "0b000011100011001110000001000001101";
        ram[8] = "0b000100000011101001111000011001101";
        ram[9] = "0b000100100100000101000111110100001";
        ram[10] = "0b000101000100011111101010001000100";
        ram[11] = "0b000101100100111001011010010001101";
        ram[12] = "0b000110000101010010010011100011010";
        ram[13] = "0b000110100101101010010000110101101";
        ram[14] = "0b000111000110000001001100111111101";
        ram[15] = "0b000111100110010111000011001111001";
        ram[16] = "0b001000000110101011101110010100011";
        ram[17] = "0b001000100110111111001001100110100";
        ram[18] = "0b001001000111010001001111110011010";
        ram[19] = "0b001001100111100001111100000001110";
        ram[20] = "0b001010000111110001001001011100001";
        ram[21] = "0b001010100111111110110010110111010";
        ram[22] = "0b001011001000001010110011011011110";
        ram[23] = "0b001011101000010101000110010001001";
        ram[24] = "0b001100001000011101100110001110111";
        ram[25] = "0b001100101000100100001110100011001";
        ram[26] = "0b001101001000101000111010000101111";
        ram[27] = "0b001101101000101011100011111001101";
        ram[28] = "0b001110001000101100000111001111010";
        ram[29] = "0b001110101000101010011111001101011";
        ram[30] = "0b001111001000100110100110011010101";
        ram[31] = "0b001111101000100000011000100011010";
        ram[32] = "0b010000001000010111110000001110010";
        ram[33] = "0b010000101000001100101000110001001";
        ram[34] = "0b010001000111111110111101001011101";
        ram[35] = "0b010001100111101110101000100010110";
        ram[36] = "0b010010000111011011100101111100101";
        ram[37] = "0b010010100111000101110000110001010";
        ram[38] = "0b010011000110101101000011110010010";
        ram[39] = "0b010011100110010001011010001010000";
        ram[40] = "0b010100000101110010101111001111000";
        ram[41] = "0b010100100101010000111101111100010";
        ram[42] = "0b010101000100101100000001011100100";
        ram[43] = "0b010101100100000011110101001110000";
        ram[44] = "0b010110000011011000010011111010011";
        ram[45] = "0b010110100010101001011001000111110";
        ram[46] = "0b010111000001110110111111101011100";
        ram[47] = "0b010111100001000001000011000111011";
        ram[48] = "0b011000000000000111011110011010111";
        ram[49] = "0b011000011111001010001100110101010";
        ram[50] = "0b011000111110001001001001100111101";
        ram[51] = "0b011001011101000100001111111001011";
        ram[52] = "0b011001111011111011011010111001000";
        ram[53] = "0b011010011010101110100110000000101";
        ram[54] = "0b011010111001011101101100010011100";
        ram[55] = "0b011011011000001000101001001010011";
        ram[56] = "0b011011110110101111010111110100000";
        ram[57] = "0b011100010101010001110011100001100";
        ram[58] = "0b011100110011101111110111101100111";
        ram[59] = "0b011101010010001001011111011101000";
        ram[60] = "0b011101110000011110100110010110000";
        ram[61] = "0b011110001110101111000111010100110";
        ram[62] = "0b011110101100111010111110000111000";
        ram[63] = "0b011111001011000010000101101101110";
        ram[64] = "0b011111101001000100011001110101101";
        ram[65] = "0b100000000111000001110101100111000";
        ram[66] = "0b100000100100111010010100011101101";
        ram[67] = "0b100001000010101101110001101101110";
        ram[68] = "0b100001100000011100001000111101010";
        ram[69] = "0b100001111110000101010101100001010";
        ram[70] = "0b100010011011101001010010101110011";
        ram[71] = "0b100010111001000111111100010000110";
        ram[72] = "0b100011010110100001001101001000100";
        ram[73] = "0b100011110011110101000001011010111";
        ram[74] = "0b100100010001000011010100000001001";
        ram[75] = "0b100100101110001100000000110100010";
        ram[76] = "0b100101001011001111000011001110000";
        ram[77] = "0b100101101000001100010110100111101";
        ram[78] = "0b100110000101000011110110101011010";
        ram[79] = "0b100110100001110101011110111111101";
        ram[80] = "0b100110111110100001001010111001001";
        ram[81] = "0b100111011011000110110110001101000";
        ram[82] = "0b100111110111100110011100011010111";
        ram[83] = "0b101000010011111111111001001010010";
        ram[84] = "0b101000110000010011000111111101010";
        ram[85] = "0b101001001100100000000100101011110";
        ram[86] = "0b101001101000100110101010101011000";
        ram[87] = "0b101010000100100110110101110100001";
        ram[88] = "0b101010100000100000100001101100101";
        ram[89] = "0b101010111100010011101010000000011";
        ram[90] = "0b101011011000000000001010100011101";
        ram[91] = "0b101011110011100101111110111101010";
        ram[92] = "0b101100001111000101000011001001111";
        ram[93] = "0b101100101010011101010010100101001";
        ram[94] = "0b101101000101101110101001010011100";
        ram[95] = "0b101101100000111001000010111100000";
        ram[96] = "0b101101111011111100011011011010001";
        ram[97] = "0b101110010110111000101110100111101";
        ram[98] = "0b101110110001101101111000001001110";
        ram[99] = "0b101111001100011011110100000110010";
        ram[100] = "0b101111100111000010011110001001010";
        ram[101] = "0b110000000001100001110010011000001";
        ram[102] = "0b110000011011111001101100101001011";
        ram[103] = "0b110000110110001010001000110101001";
        ram[104] = "0b110001010000010011000011000000110";
        ram[105] = "0b110001101010010100010111000000110";
        ram[106] = "0b110010000100001110000000111010110";
        ram[107] = "0b110010011101111111111100100111010";
        ram[108] = "0b110010110111101010000110001001110";
        ram[109] = "0b110011010001001100011001110101100";
        ram[110] = "0b110011101010100110110011011001001";
        ram[111] = "0b110100000011111001001111000101010";
        ram[112] = "0b110100011101000011101000110010001";
        ram[113] = "0b110100110110000101111100111010001";
        ram[114] = "0b110101001111000000000111100111000";
        ram[115] = "0b110101100111110010000100101001101";
        ram[116] = "0b110110000000011011110000101100111";
        ram[117] = "0b110110011000111101000111100110110";
        ram[118] = "0b110110110001010110000101101111111";
        ram[119] = "0b110111001001100110100111010001000";
        ram[120] = "0b110111100001101110101000100011001";
        ram[121] = "0b110111111001101110000101101110111";
        ram[122] = "0b111000010001100100111011001011000";
        ram[123] = "0b111000101001010011000101010101101";
        ram[124] = "0b111001000000111000100000010100111";
        ram[125] = "0b111001011000010101001000101110001";
        ram[126] = "0b111001101111101000111010101100010";
        ram[127] = "0b111010000110110011110010110010000";
        ram[128] = "0b000000000000000000000000000001101";
        ram[129] = "0b000000000101000110011010111100100";
        ram[130] = "0b000000001010001100110101001111010";
        ram[131] = "0b000000001111010011001110100000000";
        ram[132] = "0b000000010100011001100110000100000";
        ram[133] = "0b000000011001011111111011010111001";
        ram[134] = "0b000000011110100110001101110010000";
        ram[135] = "0b000000100011101100011100111101100";
        ram[136] = "0b000000101000110010101000000011100";
        ram[137] = "0b000000101101111000101110110011101";
        ram[138] = "0b000000110010111110110000011100000";
        ram[139] = "0b000000111000000100101100100001111";
        ram[140] = "0b000000111101001010100010010001110";
        ram[141] = "0b000001000010010000010001011011111";
        ram[142] = "0b000001000111010101111001001111111";
        ram[143] = "0b000001001100011011011001001010110";
        ram[144] = "0b000001010001100000110000101100010";
        ram[145] = "0b000001010110100101111111010001000";
        ram[146] = "0b000001011011101011000100010010110";
        ram[147] = "0b000001100000101111111111010000010";
        ram[148] = "0b000001100101110100101111011110000";
        ram[149] = "0b000001101010111001010100100011111";
        ram[150] = "0b000001101111111101101101110101101";
        ram[151] = "0b000001110101000001111010101011100";
        ram[152] = "0b000001111010000101111010110110011";
        ram[153] = "0b000001111111001001101101011101100";
        ram[154] = "0b000010000100001101010010001000111";
        ram[155] = "0b000010001001010000101000000100000";
        ram[156] = "0b000010001110010011101111000010000";
        ram[157] = "0b000010010011010110100110010100110";
        ram[158] = "0b000010011000011001001101011000100";
        ram[159] = "0b000010011101011011100011100101110";
        ram[160] = "0b000010100010011101101000100100011";
        ram[161] = "0b000010100111011111011011100111000";
        ram[162] = "0b000010101100100000111100000111100";
        ram[163] = "0b000010110001100010001001101111000";
        ram[164] = "0b000010110110100011000011110010011";
        ram[165] = "0b000010111011100011101001110111001";
        ram[166] = "0b000011000000100011111011001010011";
        ram[167] = "0b000011000101100011110111001111001";
        ram[168] = "0b000011001010100011011101100100100";
        ram[169] = "0b000011001111100010101101101001110";
        ram[170] = "0b000011010100100001100110111101001";
        ram[171] = "0b000011011001100000001000101010011";
        ram[172] = "0b000011011110011110010010100110101";
        ram[173] = "0b000011100011011100000100000100101";
        ram[174] = "0b000011101000011001011100011001000";
        ram[175] = "0b000011101101010110011011001000011";
        ram[176] = "0b000011110010010010111111111000001";
        ram[177] = "0b000011110111001111001001110111100";
        ram[178] = "0b000011111100001010111000101001011";
        ram[179] = "0b000100000001000110001011101011100";
        ram[180] = "0b000100000110000001000010011010111";
        ram[181] = "0b000100001010111011011100011001010";
        ram[182] = "0b000100001111110101011000111101001";
        ram[183] = "0b000100010100101110110111100100111";
        ram[184] = "0b000100011001100111110111110001000";
        ram[185] = "0b000100011110100000011000111111100";
        ram[186] = "0b000100100011011000011010101101011";
        ram[187] = "0b000100101000001111111100010100011";
        ram[188] = "0b000100101101000110111101010101011";
        ram[189] = "0b000100110001111101011101011010100";
        ram[190] = "0b000100110110110011011011100111110";
        ram[191] = "0b000100111011101000110111110100011";
        ram[192] = "0b000101000000011101110001010000001";
        ram[193] = "0b000101000101010010000111010101001";
        ram[194] = "0b000101001010000101111001101100100";
        ram[195] = "0b000101001110111001000111110111100";
        ram[196] = "0b000101010011101011110001000010111";
        ram[197] = "0b000101011000011101110101000110001";
        ram[198] = "0b000101011101001111010011000000010";
        ram[199] = "0b000101100010000000001010110000001";
        ram[200] = "0b000101100110110000011011011000010";
        ram[201] = "0b000101101011100000000100110000110";
        ram[202] = "0b000101110000001111000110001001001";
        ram[203] = "0b000101110100111101011110111110010";
        ram[204] = "0b000101111001101011001110110111011";
        ram[205] = "0b000101111110011000010101010000111";
        ram[206] = "0b000110000011000100110001101101000";
        ram[207] = "0b000110000111110000100011011110000";
        ram[208] = "0b000110001100011011101010001101111";
        ram[209] = "0b000110010001000110000101100010101";
        ram[210] = "0b000110010101101111110100110001010";
        ram[211] = "0b000110011010011000110111010011010";
        ram[212] = "0b000110011111000001001100101111000";
        ram[213] = "0b000110100011101000110100101111000";
        ram[214] = "0b000110101000001111101110100111101";
        ram[215] = "0b000110101100110101111001110111010";
        ram[216] = "0b000110110001011011010101111111001";
        ram[217] = "0b000110110110000000000010100010110";
        ram[218] = "0b000110111010100011111111000100100";
        ram[219] = "0b000110111111000111001010111101100";
        ram[220] = "0b000111000011101001100101101111011";
        ram[221] = "0b000111001000001011001110111110100";
        ram[222] = "0b000111001100101100000110000101111";
        ram[223] = "0b000111010001001100001010101101011";
        ram[224] = "0b000111010101101011011100001110001";
        ram[225] = "0b000111011010001001111010010010010";
        ram[226] = "0b000111011110100111100100010000011";
        ram[227] = "0b000111100011000100011001101001010";
        ram[228] = "0b000111100111100000011010000111011";
        ram[229] = "0b000111101011111011100101000111010";
        ram[230] = "0b000111110000010101111010000101100";
        ram[231] = "0b000111110100101111011000101001101";
        ram[232] = "0b000111111001001000000000010010101";
        ram[233] = "0b000111111101011111110000100000000";
        ram[234] = "0b001000000001110110101000111100100";
        ram[235] = "0b001000000110001100101000111111001";
        ram[236] = "0b001000001010100001110000001101011";
        ram[237] = "0b001000001110110101111110001100000";
        ram[238] = "0b001000010011001001010010010101111";
        ram[239] = "0b001000010111011011101100010100101";
        ram[240] = "0b001000011011101101001011101011100";
        ram[241] = "0b001000011111111101101111110101111";
        ram[242] = "0b001000100100001101011000010100110";
        ram[243] = "0b001000101000011100000100110011001";
        ram[244] = "0b001000101100101001110100110001011";
        ram[245] = "0b001000110000110110100111101101101";
        ram[246] = "0b001000110101000010011101011000100";
        ram[247] = "0b001000111001001101010100111011100";
        ram[248] = "0b001000111101010111001110010110011";
        ram[249] = "0b001001000001100000001000110100111";
        ram[250] = "0b001001000101101000000100000100100";
        ram[251] = "0b001001001001101110111111110010000";
        ram[252] = "0b001001001101110100111011010100101";
        ram[253] = "0b001001010001111001110110010100101";
        ram[254] = "0b001001010101111101110000010010100";
        ram[255] = "0b001001011010000000101000110110100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(sin_or_cos_doubleIfE) {


static const unsigned DataWidth = 33;
static const unsigned AddressRange = 256;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sin_or_cos_doubleIfE_ram* meminst;


SC_CTOR(sin_or_cos_doubleIfE) {
meminst = new sin_or_cos_doubleIfE_ram("sin_or_cos_doubleIfE_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~sin_or_cos_doubleIfE() {
    delete meminst;
}


};//endmodule
#endif
