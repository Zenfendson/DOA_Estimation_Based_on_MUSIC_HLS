// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sort_eigval_HH_
#define _sort_eigval_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "music_fcmp_32ns_3pcA.h"
#include "music_mux_42_32_1_1.h"

namespace ap_rtl {

struct sort_eigval : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > eigval_0_read;
    sc_in< sc_lv<32> > eigval_1_read;
    sc_in< sc_lv<32> > eigval_2_read;
    sc_in< sc_lv<32> > eigval_3_read;
    sc_in< sc_lv<32> > sort_index_0_read;
    sc_in< sc_lv<32> > sort_index_1_read;
    sc_in< sc_lv<32> > sort_index_2_read;
    sc_in< sc_lv<32> > sort_index_3_read;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    sort_eigval(sc_module_name name);
    SC_HAS_PROCESS(sort_eigval);

    ~sort_eigval();

    sc_trace_file* mVcdFile;

    music_fcmp_32ns_3pcA<1,2,32,32,1>* music_fcmp_32ns_3pcA_U172;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U173;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U174;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U175;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U176;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U177;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U178;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U179;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U180;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U181;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U182;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U183;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U184;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U185;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U186;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U187;
    music_mux_42_32_1_1<1,1,32,32,32,32,2,32>* music_mux_42_32_1_1_U188;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_264_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > sort_index_3_1_fu_274_p6;
    sc_signal< sc_lv<1> > icmp_ln73_fu_258_p2;
    sc_signal< sc_lv<32> > sort_index_2_1_fu_288_p6;
    sc_signal< sc_lv<32> > sort_index_1_1_fu_302_p6;
    sc_signal< sc_lv<32> > sort_index_0_1_fu_316_p6;
    sc_signal< sc_lv<32> > zext_ln77_fu_330_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > i_1_fu_340_p2;
    sc_signal< sc_lv<2> > i_1_reg_726;
    sc_signal< sc_lv<32> > j_2_fu_374_p2;
    sc_signal< sc_lv<32> > j_2_reg_731;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_1_fu_408_p6;
    sc_signal< sc_lv<32> > tmp_1_reg_740;
    sc_signal< sc_lv<1> > icmp_ln78_fu_380_p2;
    sc_signal< sc_lv<32> > tmp_3_fu_442_p6;
    sc_signal< sc_lv<32> > tmp_3_reg_746;
    sc_signal< sc_lv<2> > trunc_ln84_fu_452_p1;
    sc_signal< sc_lv<2> > trunc_ln84_reg_752;
    sc_signal< sc_lv<32> > temp_fu_456_p6;
    sc_signal< sc_lv<32> > temp_reg_760;
    sc_signal< sc_lv<1> > icmp_ln79_fu_504_p2;
    sc_signal< sc_lv<1> > icmp_ln79_reg_768;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln79_1_fu_510_p2;
    sc_signal< sc_lv<1> > icmp_ln79_1_reg_773;
    sc_signal< sc_lv<1> > icmp_ln79_2_fu_516_p2;
    sc_signal< sc_lv<1> > icmp_ln79_2_reg_778;
    sc_signal< sc_lv<1> > icmp_ln79_3_fu_522_p2;
    sc_signal< sc_lv<1> > icmp_ln79_3_reg_783;
    sc_signal< sc_lv<32> > j_fu_548_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > sort_index_3_3_fu_555_p6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > sort_index_2_4_fu_607_p6;
    sc_signal< sc_lv<32> > sort_index_1_4_fu_619_p6;
    sc_signal< sc_lv<32> > sort_index_0_4_fu_632_p6;
    sc_signal< sc_lv<32> > sort_index_0_0_reg_110;
    sc_signal< sc_lv<32> > sort_index_1_0_reg_120;
    sc_signal< sc_lv<32> > sort_index_2_0_reg_130;
    sc_signal< sc_lv<32> > sort_index_3_0_reg_140;
    sc_signal< sc_lv<3> > i_0_reg_150;
    sc_signal< sc_lv<32> > sort_index_0_2_reg_161;
    sc_signal< sc_lv<32> > sort_index_1_2_reg_172;
    sc_signal< sc_lv<32> > sort_index_2_2_reg_183;
    sc_signal< sc_lv<32> > sort_index_3_2_reg_194;
    sc_signal< sc_lv<2> > flag_reg_205;
    sc_signal< sc_lv<32> > flag_0_reg_217;
    sc_signal< sc_lv<1> > icmp_ln76_fu_334_p2;
    sc_signal< sc_lv<32> > j_0_in_reg_227;
    sc_signal< sc_lv<32> > phi_ln85_reg_236;
    sc_signal< sc_lv<32> > zext_ln73_fu_254_p1;
    sc_signal< sc_lv<2> > trunc_ln74_fu_270_p1;
    sc_signal< sc_lv<2> > tmp_fu_390_p5;
    sc_signal< sc_lv<32> > tmp_fu_390_p6;
    sc_signal< sc_lv<2> > tmp_1_fu_408_p5;
    sc_signal< sc_lv<2> > trunc_ln78_fu_370_p1;
    sc_signal< sc_lv<2> > tmp_2_fu_424_p5;
    sc_signal< sc_lv<32> > tmp_2_fu_424_p6;
    sc_signal< sc_lv<2> > tmp_3_fu_442_p5;
    sc_signal< sc_lv<2> > temp_fu_456_p5;
    sc_signal< sc_lv<32> > bitcast_ln79_fu_470_p1;
    sc_signal< sc_lv<32> > bitcast_ln79_1_fu_487_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_473_p4;
    sc_signal< sc_lv<23> > trunc_ln79_3_fu_483_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_490_p4;
    sc_signal< sc_lv<23> > trunc_ln79_4_fu_500_p1;
    sc_signal< sc_lv<1> > or_ln79_fu_528_p2;
    sc_signal< sc_lv<1> > or_ln79_1_fu_532_p2;
    sc_signal< sc_lv<1> > and_ln79_fu_536_p2;
    sc_signal< sc_lv<1> > grp_fu_250_p2;
    sc_signal< sc_lv<1> > and_ln79_1_fu_542_p2;
    sc_signal< sc_lv<32> > sort_index_2_3_fu_568_p6;
    sc_signal< sc_lv<32> > sort_index_1_3_fu_581_p6;
    sc_signal< sc_lv<32> > sort_index_0_3_fu_594_p6;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<32> > ap_return_1_preg;
    sc_signal< sc_lv<32> > ap_return_2_preg;
    sc_signal< sc_lv<32> > ap_return_3_preg;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_and_ln79_1_fu_542_p2();
    void thread_and_ln79_fu_536_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_bitcast_ln79_1_fu_487_p1();
    void thread_bitcast_ln79_fu_470_p1();
    void thread_i_1_fu_340_p2();
    void thread_i_fu_264_p2();
    void thread_icmp_ln73_fu_258_p2();
    void thread_icmp_ln76_fu_334_p2();
    void thread_icmp_ln78_fu_380_p2();
    void thread_icmp_ln79_1_fu_510_p2();
    void thread_icmp_ln79_2_fu_516_p2();
    void thread_icmp_ln79_3_fu_522_p2();
    void thread_icmp_ln79_fu_504_p2();
    void thread_j_2_fu_374_p2();
    void thread_j_fu_548_p3();
    void thread_or_ln79_1_fu_532_p2();
    void thread_or_ln79_fu_528_p2();
    void thread_temp_fu_456_p5();
    void thread_tmp_1_fu_408_p5();
    void thread_tmp_2_fu_424_p5();
    void thread_tmp_3_fu_442_p5();
    void thread_tmp_4_fu_473_p4();
    void thread_tmp_5_fu_490_p4();
    void thread_tmp_fu_390_p5();
    void thread_trunc_ln74_fu_270_p1();
    void thread_trunc_ln78_fu_370_p1();
    void thread_trunc_ln79_3_fu_483_p1();
    void thread_trunc_ln79_4_fu_500_p1();
    void thread_trunc_ln84_fu_452_p1();
    void thread_zext_ln73_fu_254_p1();
    void thread_zext_ln77_fu_330_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
