-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity qrf_magnitude_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    a_M_real : IN STD_LOGIC_VECTOR (31 downto 0);
    a_M_imag : IN STD_LOGIC_VECTOR (31 downto 0);
    b_M_real : IN STD_LOGIC_VECTOR (31 downto 0);
    b_M_imag : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of qrf_magnitude_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal d1_4_fu_175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal d1_4_reg_605_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_reg_617 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_reg_617_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_4_fu_233_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_4_reg_629 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_4_reg_629_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_fu_262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_reg_642 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_reg_642_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln179_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_1_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_1_reg_660 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_2_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_2_reg_667 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_3_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_3_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_1_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_1_reg_681 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_1_reg_689 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_7_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_7_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_3_fu_522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_703 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_3_fu_533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_3_reg_708 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_3_fu_545_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_3_reg_713 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_fu_557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter25_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter28_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter31_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter32_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter33_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter34_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter35_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter36_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter37_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter38_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter39_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter40_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter41_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter42_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter43_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_3_reg_718_pp0_iter44_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln201_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_728_pp0_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_97_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x1_reg_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_reg_738 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x3_reg_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_80_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x1_sqd_reg_750 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_84_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_sqd_reg_755 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_88_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x3_sqd_reg_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_67_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s1_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_72_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_76_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s3_reg_775 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_150_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_780 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_phi_fu_60_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_92_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter48_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter30_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter31_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter32_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter33_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter34_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter35_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter36_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter37_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter38_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter39_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter40_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter41_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter42_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter43_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter44_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter45_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter46_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter47_p_0_reg_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_145_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_fu_159_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_s_fu_167_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_64_fu_184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_1_fu_188_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_48_fu_196_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_65_fu_213_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_2_fu_217_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_49_fu_225_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_66_fu_242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_3_fu_246_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_50_fu_254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_269_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_fu_163_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_1_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_279_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_1_fu_192_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_3_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_2_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_325_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_2_fu_221_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_5_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_4_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_353_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_3_fu_250_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_7_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_6_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_3_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_5_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_4_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_6_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_7_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_2_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_1_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_3_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_3_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_2_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_4_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_5_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_2_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_4_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln179_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_6_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_5_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_fu_517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_fu_528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_1_fu_507_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_2_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_1_fu_512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_2_fu_551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln201_fu_564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_567_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln201_fu_577_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln201_1_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln201_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_67_ce : STD_LOGIC;
    signal grp_fu_72_ce : STD_LOGIC;
    signal grp_fu_76_ce : STD_LOGIC;
    signal grp_fu_80_ce : STD_LOGIC;
    signal grp_fu_84_ce : STD_LOGIC;
    signal grp_fu_88_ce : STD_LOGIC;
    signal grp_fu_92_ce : STD_LOGIC;
    signal grp_fu_97_ce : STD_LOGIC;
    signal grp_fu_101_ce : STD_LOGIC;
    signal grp_fu_105_ce : STD_LOGIC;
    signal grp_fu_109_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_113_ce : STD_LOGIC;
    signal grp_fu_117_ce : STD_LOGIC;
    signal grp_fu_121_ce : STD_LOGIC;
    signal grp_fu_125_ce : STD_LOGIC;
    signal grp_fu_129_ce : STD_LOGIC;
    signal grp_fu_133_ce : STD_LOGIC;
    signal grp_fu_137_ce : STD_LOGIC;
    signal grp_fu_141_ce : STD_LOGIC;
    signal grp_fu_145_ce : STD_LOGIC;
    signal grp_fu_150_ce : STD_LOGIC;
    signal a_M_real_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal a_M_imag_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal b_M_real_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal b_M_imag_int_reg : STD_LOGIC_VECTOR (31 downto 0);

    component music_fadd_32ns_3ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fmul_32ns_3jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fdiv_32ns_3ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fcmp_32ns_3pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component music_fsqrt_32ns_qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    music_fadd_32ns_3ocq_U53 : component music_fadd_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x1_sqd_reg_750,
        din1 => ap_const_lv32_3F800000,
        ce => grp_fu_67_ce,
        dout => grp_fu_67_p2);

    music_fadd_32ns_3ocq_U54 : component music_fadd_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x2_sqd_reg_755,
        din1 => x3_sqd_reg_760,
        ce => grp_fu_72_ce,
        dout => grp_fu_72_p2);

    music_fadd_32ns_3ocq_U55 : component music_fadd_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s1_reg_765,
        din1 => s2_reg_770,
        ce => grp_fu_76_ce,
        dout => grp_fu_76_p2);

    music_fmul_32ns_3jbC_U56 : component music_fmul_32ns_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x1_reg_732,
        din1 => x1_reg_732,
        ce => grp_fu_80_ce,
        dout => grp_fu_80_p2);

    music_fmul_32ns_3jbC_U57 : component music_fmul_32ns_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x2_reg_738,
        din1 => x2_reg_738,
        ce => grp_fu_84_ce,
        dout => grp_fu_84_p2);

    music_fmul_32ns_3jbC_U58 : component music_fmul_32ns_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x3_reg_744,
        din1 => x3_reg_744,
        ce => grp_fu_88_ce,
        dout => grp_fu_88_p2);

    music_fmul_32ns_3jbC_U59 : component music_fmul_32ns_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_3_reg_718_pp0_iter44_reg,
        din1 => tmp_i_i_reg_780,
        ce => grp_fu_92_ce,
        dout => grp_fu_92_p2);

    music_fdiv_32ns_3ncg_U60 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d1_3_reg_703,
        din1 => largest_3_reg_718,
        ce => grp_fu_97_ce,
        dout => grp_fu_97_p2);

    music_fdiv_32ns_3ncg_U61 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d2_3_reg_708,
        din1 => largest_3_reg_718,
        ce => grp_fu_101_ce,
        dout => grp_fu_101_p2);

    music_fdiv_32ns_3ncg_U62 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d3_3_reg_713,
        din1 => largest_3_reg_718,
        ce => grp_fu_105_ce,
        dout => grp_fu_105_p2);

    music_fcmp_32ns_3pcA_U63 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d1_4_fu_175_p1,
        din1 => d2_4_fu_204_p1,
        ce => grp_fu_109_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_109_p2);

    music_fcmp_32ns_3pcA_U64 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d1_4_fu_175_p1,
        din1 => largest_4_fu_233_p1,
        ce => grp_fu_113_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_113_p2);

    music_fcmp_32ns_3pcA_U65 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d1_4_fu_175_p1,
        din1 => d3_fu_262_p1,
        ce => grp_fu_117_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_117_p2);

    music_fcmp_32ns_3pcA_U66 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d2_4_fu_204_p1,
        din1 => d1_4_fu_175_p1,
        ce => grp_fu_121_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_121_p2);

    music_fcmp_32ns_3pcA_U67 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d2_4_fu_204_p1,
        din1 => largest_4_fu_233_p1,
        ce => grp_fu_125_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_125_p2);

    music_fcmp_32ns_3pcA_U68 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d2_4_fu_204_p1,
        din1 => d3_fu_262_p1,
        ce => grp_fu_129_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_129_p2);

    music_fcmp_32ns_3pcA_U69 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_4_fu_233_p1,
        din1 => d1_4_fu_175_p1,
        ce => grp_fu_133_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_133_p2);

    music_fcmp_32ns_3pcA_U70 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_4_fu_233_p1,
        din1 => d2_4_fu_204_p1,
        ce => grp_fu_137_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_137_p2);

    music_fcmp_32ns_3pcA_U71 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_4_fu_233_p1,
        din1 => d3_fu_262_p1,
        ce => grp_fu_141_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_141_p2);

    music_fcmp_32ns_3pcA_U72 : component music_fcmp_32ns_3pcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_145_p0,
        din1 => ap_const_lv32_0,
        ce => grp_fu_145_ce,
        opcode => ap_const_lv5_1,
        dout => grp_fu_145_p2);

    music_fsqrt_32ns_qcK_U73 : component music_fsqrt_32ns_qcK
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => s3_reg_775,
        ce => grp_fu_150_ce,
        dout => grp_fu_150_p2);





    ap_phi_reg_pp0_iter4_p_0_reg_56_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                if ((ap_const_lv1_1 = and_ln201_fu_599_p2)) then 
                    ap_phi_reg_pp0_iter4_p_0_reg_56 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_0_reg_56 <= ap_phi_reg_pp0_iter3_p_0_reg_56;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                a_M_imag_int_reg <= a_M_imag;
                a_M_real_int_reg <= a_M_real;
                b_M_imag_int_reg <= b_M_imag;
                b_M_real_int_reg <= b_M_real;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                and_ln179_1_reg_681 <= and_ln179_1_fu_417_p2;
                and_ln184_7_reg_695 <= and_ln184_7_fu_501_p2;
                and_ln189_1_reg_689 <= and_ln189_1_fu_477_p2;
                and_ln201_reg_728 <= and_ln201_fu_599_p2;
                and_ln201_reg_728_pp0_iter10_reg <= and_ln201_reg_728_pp0_iter9_reg;
                and_ln201_reg_728_pp0_iter11_reg <= and_ln201_reg_728_pp0_iter10_reg;
                and_ln201_reg_728_pp0_iter12_reg <= and_ln201_reg_728_pp0_iter11_reg;
                and_ln201_reg_728_pp0_iter13_reg <= and_ln201_reg_728_pp0_iter12_reg;
                and_ln201_reg_728_pp0_iter14_reg <= and_ln201_reg_728_pp0_iter13_reg;
                and_ln201_reg_728_pp0_iter15_reg <= and_ln201_reg_728_pp0_iter14_reg;
                and_ln201_reg_728_pp0_iter16_reg <= and_ln201_reg_728_pp0_iter15_reg;
                and_ln201_reg_728_pp0_iter17_reg <= and_ln201_reg_728_pp0_iter16_reg;
                and_ln201_reg_728_pp0_iter18_reg <= and_ln201_reg_728_pp0_iter17_reg;
                and_ln201_reg_728_pp0_iter19_reg <= and_ln201_reg_728_pp0_iter18_reg;
                and_ln201_reg_728_pp0_iter20_reg <= and_ln201_reg_728_pp0_iter19_reg;
                and_ln201_reg_728_pp0_iter21_reg <= and_ln201_reg_728_pp0_iter20_reg;
                and_ln201_reg_728_pp0_iter22_reg <= and_ln201_reg_728_pp0_iter21_reg;
                and_ln201_reg_728_pp0_iter23_reg <= and_ln201_reg_728_pp0_iter22_reg;
                and_ln201_reg_728_pp0_iter24_reg <= and_ln201_reg_728_pp0_iter23_reg;
                and_ln201_reg_728_pp0_iter25_reg <= and_ln201_reg_728_pp0_iter24_reg;
                and_ln201_reg_728_pp0_iter26_reg <= and_ln201_reg_728_pp0_iter25_reg;
                and_ln201_reg_728_pp0_iter27_reg <= and_ln201_reg_728_pp0_iter26_reg;
                and_ln201_reg_728_pp0_iter28_reg <= and_ln201_reg_728_pp0_iter27_reg;
                and_ln201_reg_728_pp0_iter29_reg <= and_ln201_reg_728_pp0_iter28_reg;
                and_ln201_reg_728_pp0_iter30_reg <= and_ln201_reg_728_pp0_iter29_reg;
                and_ln201_reg_728_pp0_iter31_reg <= and_ln201_reg_728_pp0_iter30_reg;
                and_ln201_reg_728_pp0_iter32_reg <= and_ln201_reg_728_pp0_iter31_reg;
                and_ln201_reg_728_pp0_iter33_reg <= and_ln201_reg_728_pp0_iter32_reg;
                and_ln201_reg_728_pp0_iter34_reg <= and_ln201_reg_728_pp0_iter33_reg;
                and_ln201_reg_728_pp0_iter35_reg <= and_ln201_reg_728_pp0_iter34_reg;
                and_ln201_reg_728_pp0_iter36_reg <= and_ln201_reg_728_pp0_iter35_reg;
                and_ln201_reg_728_pp0_iter37_reg <= and_ln201_reg_728_pp0_iter36_reg;
                and_ln201_reg_728_pp0_iter38_reg <= and_ln201_reg_728_pp0_iter37_reg;
                and_ln201_reg_728_pp0_iter39_reg <= and_ln201_reg_728_pp0_iter38_reg;
                and_ln201_reg_728_pp0_iter40_reg <= and_ln201_reg_728_pp0_iter39_reg;
                and_ln201_reg_728_pp0_iter41_reg <= and_ln201_reg_728_pp0_iter40_reg;
                and_ln201_reg_728_pp0_iter42_reg <= and_ln201_reg_728_pp0_iter41_reg;
                and_ln201_reg_728_pp0_iter43_reg <= and_ln201_reg_728_pp0_iter42_reg;
                and_ln201_reg_728_pp0_iter44_reg <= and_ln201_reg_728_pp0_iter43_reg;
                and_ln201_reg_728_pp0_iter45_reg <= and_ln201_reg_728_pp0_iter44_reg;
                and_ln201_reg_728_pp0_iter46_reg <= and_ln201_reg_728_pp0_iter45_reg;
                and_ln201_reg_728_pp0_iter47_reg <= and_ln201_reg_728_pp0_iter46_reg;
                and_ln201_reg_728_pp0_iter4_reg <= and_ln201_reg_728;
                and_ln201_reg_728_pp0_iter5_reg <= and_ln201_reg_728_pp0_iter4_reg;
                and_ln201_reg_728_pp0_iter6_reg <= and_ln201_reg_728_pp0_iter5_reg;
                and_ln201_reg_728_pp0_iter7_reg <= and_ln201_reg_728_pp0_iter6_reg;
                and_ln201_reg_728_pp0_iter8_reg <= and_ln201_reg_728_pp0_iter7_reg;
                and_ln201_reg_728_pp0_iter9_reg <= and_ln201_reg_728_pp0_iter8_reg;
                ap_phi_reg_pp0_iter10_p_0_reg_56 <= ap_phi_reg_pp0_iter9_p_0_reg_56;
                ap_phi_reg_pp0_iter11_p_0_reg_56 <= ap_phi_reg_pp0_iter10_p_0_reg_56;
                ap_phi_reg_pp0_iter12_p_0_reg_56 <= ap_phi_reg_pp0_iter11_p_0_reg_56;
                ap_phi_reg_pp0_iter13_p_0_reg_56 <= ap_phi_reg_pp0_iter12_p_0_reg_56;
                ap_phi_reg_pp0_iter14_p_0_reg_56 <= ap_phi_reg_pp0_iter13_p_0_reg_56;
                ap_phi_reg_pp0_iter15_p_0_reg_56 <= ap_phi_reg_pp0_iter14_p_0_reg_56;
                ap_phi_reg_pp0_iter16_p_0_reg_56 <= ap_phi_reg_pp0_iter15_p_0_reg_56;
                ap_phi_reg_pp0_iter17_p_0_reg_56 <= ap_phi_reg_pp0_iter16_p_0_reg_56;
                ap_phi_reg_pp0_iter18_p_0_reg_56 <= ap_phi_reg_pp0_iter17_p_0_reg_56;
                ap_phi_reg_pp0_iter19_p_0_reg_56 <= ap_phi_reg_pp0_iter18_p_0_reg_56;
                ap_phi_reg_pp0_iter1_p_0_reg_56 <= ap_phi_reg_pp0_iter0_p_0_reg_56;
                ap_phi_reg_pp0_iter20_p_0_reg_56 <= ap_phi_reg_pp0_iter19_p_0_reg_56;
                ap_phi_reg_pp0_iter21_p_0_reg_56 <= ap_phi_reg_pp0_iter20_p_0_reg_56;
                ap_phi_reg_pp0_iter22_p_0_reg_56 <= ap_phi_reg_pp0_iter21_p_0_reg_56;
                ap_phi_reg_pp0_iter23_p_0_reg_56 <= ap_phi_reg_pp0_iter22_p_0_reg_56;
                ap_phi_reg_pp0_iter24_p_0_reg_56 <= ap_phi_reg_pp0_iter23_p_0_reg_56;
                ap_phi_reg_pp0_iter25_p_0_reg_56 <= ap_phi_reg_pp0_iter24_p_0_reg_56;
                ap_phi_reg_pp0_iter26_p_0_reg_56 <= ap_phi_reg_pp0_iter25_p_0_reg_56;
                ap_phi_reg_pp0_iter27_p_0_reg_56 <= ap_phi_reg_pp0_iter26_p_0_reg_56;
                ap_phi_reg_pp0_iter28_p_0_reg_56 <= ap_phi_reg_pp0_iter27_p_0_reg_56;
                ap_phi_reg_pp0_iter29_p_0_reg_56 <= ap_phi_reg_pp0_iter28_p_0_reg_56;
                ap_phi_reg_pp0_iter2_p_0_reg_56 <= ap_phi_reg_pp0_iter1_p_0_reg_56;
                ap_phi_reg_pp0_iter30_p_0_reg_56 <= ap_phi_reg_pp0_iter29_p_0_reg_56;
                ap_phi_reg_pp0_iter31_p_0_reg_56 <= ap_phi_reg_pp0_iter30_p_0_reg_56;
                ap_phi_reg_pp0_iter32_p_0_reg_56 <= ap_phi_reg_pp0_iter31_p_0_reg_56;
                ap_phi_reg_pp0_iter33_p_0_reg_56 <= ap_phi_reg_pp0_iter32_p_0_reg_56;
                ap_phi_reg_pp0_iter34_p_0_reg_56 <= ap_phi_reg_pp0_iter33_p_0_reg_56;
                ap_phi_reg_pp0_iter35_p_0_reg_56 <= ap_phi_reg_pp0_iter34_p_0_reg_56;
                ap_phi_reg_pp0_iter36_p_0_reg_56 <= ap_phi_reg_pp0_iter35_p_0_reg_56;
                ap_phi_reg_pp0_iter37_p_0_reg_56 <= ap_phi_reg_pp0_iter36_p_0_reg_56;
                ap_phi_reg_pp0_iter38_p_0_reg_56 <= ap_phi_reg_pp0_iter37_p_0_reg_56;
                ap_phi_reg_pp0_iter39_p_0_reg_56 <= ap_phi_reg_pp0_iter38_p_0_reg_56;
                ap_phi_reg_pp0_iter3_p_0_reg_56 <= ap_phi_reg_pp0_iter2_p_0_reg_56;
                ap_phi_reg_pp0_iter40_p_0_reg_56 <= ap_phi_reg_pp0_iter39_p_0_reg_56;
                ap_phi_reg_pp0_iter41_p_0_reg_56 <= ap_phi_reg_pp0_iter40_p_0_reg_56;
                ap_phi_reg_pp0_iter42_p_0_reg_56 <= ap_phi_reg_pp0_iter41_p_0_reg_56;
                ap_phi_reg_pp0_iter43_p_0_reg_56 <= ap_phi_reg_pp0_iter42_p_0_reg_56;
                ap_phi_reg_pp0_iter44_p_0_reg_56 <= ap_phi_reg_pp0_iter43_p_0_reg_56;
                ap_phi_reg_pp0_iter45_p_0_reg_56 <= ap_phi_reg_pp0_iter44_p_0_reg_56;
                ap_phi_reg_pp0_iter46_p_0_reg_56 <= ap_phi_reg_pp0_iter45_p_0_reg_56;
                ap_phi_reg_pp0_iter47_p_0_reg_56 <= ap_phi_reg_pp0_iter46_p_0_reg_56;
                ap_phi_reg_pp0_iter48_p_0_reg_56 <= ap_phi_reg_pp0_iter47_p_0_reg_56;
                ap_phi_reg_pp0_iter5_p_0_reg_56 <= ap_phi_reg_pp0_iter4_p_0_reg_56;
                ap_phi_reg_pp0_iter6_p_0_reg_56 <= ap_phi_reg_pp0_iter5_p_0_reg_56;
                ap_phi_reg_pp0_iter7_p_0_reg_56 <= ap_phi_reg_pp0_iter6_p_0_reg_56;
                ap_phi_reg_pp0_iter8_p_0_reg_56 <= ap_phi_reg_pp0_iter7_p_0_reg_56;
                ap_phi_reg_pp0_iter9_p_0_reg_56 <= ap_phi_reg_pp0_iter8_p_0_reg_56;
                    d1_3_reg_703(30 downto 0) <= d1_3_fu_522_p3(30 downto 0);
                    d1_4_reg_605(30 downto 0) <= d1_4_fu_175_p1(30 downto 0);
                    d1_4_reg_605_pp0_iter1_reg(30 downto 0) <= d1_4_reg_605(30 downto 0);
                    d2_3_reg_708(30 downto 0) <= d2_3_fu_533_p3(30 downto 0);
                    d2_4_reg_617(30 downto 0) <= d2_4_fu_204_p1(30 downto 0);
                    d2_4_reg_617_pp0_iter1_reg(30 downto 0) <= d2_4_reg_617(30 downto 0);
                    d3_3_reg_713(30 downto 0) <= d3_3_fu_545_p3(30 downto 0);
                    d3_reg_642(30 downto 0) <= d3_fu_262_p1(30 downto 0);
                    d3_reg_642_pp0_iter1_reg(30 downto 0) <= d3_reg_642(30 downto 0);
                    largest_3_reg_718(30 downto 0) <= largest_3_fu_557_p3(30 downto 0);
                    largest_3_reg_718_pp0_iter10_reg(30 downto 0) <= largest_3_reg_718_pp0_iter9_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter11_reg(30 downto 0) <= largest_3_reg_718_pp0_iter10_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter12_reg(30 downto 0) <= largest_3_reg_718_pp0_iter11_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter13_reg(30 downto 0) <= largest_3_reg_718_pp0_iter12_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter14_reg(30 downto 0) <= largest_3_reg_718_pp0_iter13_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter15_reg(30 downto 0) <= largest_3_reg_718_pp0_iter14_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter16_reg(30 downto 0) <= largest_3_reg_718_pp0_iter15_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter17_reg(30 downto 0) <= largest_3_reg_718_pp0_iter16_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter18_reg(30 downto 0) <= largest_3_reg_718_pp0_iter17_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter19_reg(30 downto 0) <= largest_3_reg_718_pp0_iter18_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter20_reg(30 downto 0) <= largest_3_reg_718_pp0_iter19_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter21_reg(30 downto 0) <= largest_3_reg_718_pp0_iter20_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter22_reg(30 downto 0) <= largest_3_reg_718_pp0_iter21_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter23_reg(30 downto 0) <= largest_3_reg_718_pp0_iter22_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter24_reg(30 downto 0) <= largest_3_reg_718_pp0_iter23_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter25_reg(30 downto 0) <= largest_3_reg_718_pp0_iter24_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter26_reg(30 downto 0) <= largest_3_reg_718_pp0_iter25_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter27_reg(30 downto 0) <= largest_3_reg_718_pp0_iter26_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter28_reg(30 downto 0) <= largest_3_reg_718_pp0_iter27_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter29_reg(30 downto 0) <= largest_3_reg_718_pp0_iter28_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter30_reg(30 downto 0) <= largest_3_reg_718_pp0_iter29_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter31_reg(30 downto 0) <= largest_3_reg_718_pp0_iter30_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter32_reg(30 downto 0) <= largest_3_reg_718_pp0_iter31_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter33_reg(30 downto 0) <= largest_3_reg_718_pp0_iter32_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter34_reg(30 downto 0) <= largest_3_reg_718_pp0_iter33_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter35_reg(30 downto 0) <= largest_3_reg_718_pp0_iter34_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter36_reg(30 downto 0) <= largest_3_reg_718_pp0_iter35_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter37_reg(30 downto 0) <= largest_3_reg_718_pp0_iter36_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter38_reg(30 downto 0) <= largest_3_reg_718_pp0_iter37_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter39_reg(30 downto 0) <= largest_3_reg_718_pp0_iter38_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter3_reg(30 downto 0) <= largest_3_reg_718(30 downto 0);
                    largest_3_reg_718_pp0_iter40_reg(30 downto 0) <= largest_3_reg_718_pp0_iter39_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter41_reg(30 downto 0) <= largest_3_reg_718_pp0_iter40_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter42_reg(30 downto 0) <= largest_3_reg_718_pp0_iter41_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter43_reg(30 downto 0) <= largest_3_reg_718_pp0_iter42_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter44_reg(30 downto 0) <= largest_3_reg_718_pp0_iter43_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter4_reg(30 downto 0) <= largest_3_reg_718_pp0_iter3_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter5_reg(30 downto 0) <= largest_3_reg_718_pp0_iter4_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter6_reg(30 downto 0) <= largest_3_reg_718_pp0_iter5_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter7_reg(30 downto 0) <= largest_3_reg_718_pp0_iter6_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter8_reg(30 downto 0) <= largest_3_reg_718_pp0_iter7_reg(30 downto 0);
                    largest_3_reg_718_pp0_iter9_reg(30 downto 0) <= largest_3_reg_718_pp0_iter8_reg(30 downto 0);
                    largest_4_reg_629(30 downto 0) <= largest_4_fu_233_p1(30 downto 0);
                    largest_4_reg_629_pp0_iter1_reg(30 downto 0) <= largest_4_reg_629(30 downto 0);
                or_ln179_1_reg_660 <= or_ln179_1_fu_319_p2;
                or_ln179_2_reg_667 <= or_ln179_2_fu_347_p2;
                or_ln179_3_reg_674 <= or_ln179_3_fu_375_p2;
                or_ln179_reg_653 <= or_ln179_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln201_reg_728_pp0_iter26_reg) and (ap_const_logic_1 = ap_ce))) then
                s1_reg_765 <= grp_fu_67_p2;
                s2_reg_770 <= grp_fu_72_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln201_reg_728_pp0_iter31_reg) and (ap_const_logic_1 = ap_ce))) then
                s3_reg_775 <= grp_fu_76_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln201_reg_728_pp0_iter43_reg) and (ap_const_logic_1 = ap_ce))) then
                tmp_i_i_reg_780 <= grp_fu_150_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln201_reg_728_pp0_iter17_reg) and (ap_const_logic_1 = ap_ce))) then
                x1_reg_732 <= grp_fu_97_p2;
                x2_reg_738 <= grp_fu_101_p2;
                x3_reg_744 <= grp_fu_105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln201_reg_728_pp0_iter21_reg) and (ap_const_logic_1 = ap_ce))) then
                x1_sqd_reg_750 <= grp_fu_80_p2;
                x2_sqd_reg_755 <= grp_fu_84_p2;
                x3_sqd_reg_760 <= grp_fu_88_p2;
            end if;
        end if;
    end process;
    d1_4_reg_605(31) <= '0';
    d1_4_reg_605_pp0_iter1_reg(31) <= '0';
    d2_4_reg_617(31) <= '0';
    d2_4_reg_617_pp0_iter1_reg(31) <= '0';
    largest_4_reg_629(31) <= '0';
    largest_4_reg_629_pp0_iter1_reg(31) <= '0';
    d3_reg_642(31) <= '0';
    d3_reg_642_pp0_iter1_reg(31) <= '0';
    d1_3_reg_703(31) <= '0';
    d2_3_reg_708(31) <= '0';
    d3_3_reg_713(31) <= '0';
    largest_3_reg_718(31) <= '0';
    largest_3_reg_718_pp0_iter3_reg(31) <= '0';
    largest_3_reg_718_pp0_iter4_reg(31) <= '0';
    largest_3_reg_718_pp0_iter5_reg(31) <= '0';
    largest_3_reg_718_pp0_iter6_reg(31) <= '0';
    largest_3_reg_718_pp0_iter7_reg(31) <= '0';
    largest_3_reg_718_pp0_iter8_reg(31) <= '0';
    largest_3_reg_718_pp0_iter9_reg(31) <= '0';
    largest_3_reg_718_pp0_iter10_reg(31) <= '0';
    largest_3_reg_718_pp0_iter11_reg(31) <= '0';
    largest_3_reg_718_pp0_iter12_reg(31) <= '0';
    largest_3_reg_718_pp0_iter13_reg(31) <= '0';
    largest_3_reg_718_pp0_iter14_reg(31) <= '0';
    largest_3_reg_718_pp0_iter15_reg(31) <= '0';
    largest_3_reg_718_pp0_iter16_reg(31) <= '0';
    largest_3_reg_718_pp0_iter17_reg(31) <= '0';
    largest_3_reg_718_pp0_iter18_reg(31) <= '0';
    largest_3_reg_718_pp0_iter19_reg(31) <= '0';
    largest_3_reg_718_pp0_iter20_reg(31) <= '0';
    largest_3_reg_718_pp0_iter21_reg(31) <= '0';
    largest_3_reg_718_pp0_iter22_reg(31) <= '0';
    largest_3_reg_718_pp0_iter23_reg(31) <= '0';
    largest_3_reg_718_pp0_iter24_reg(31) <= '0';
    largest_3_reg_718_pp0_iter25_reg(31) <= '0';
    largest_3_reg_718_pp0_iter26_reg(31) <= '0';
    largest_3_reg_718_pp0_iter27_reg(31) <= '0';
    largest_3_reg_718_pp0_iter28_reg(31) <= '0';
    largest_3_reg_718_pp0_iter29_reg(31) <= '0';
    largest_3_reg_718_pp0_iter30_reg(31) <= '0';
    largest_3_reg_718_pp0_iter31_reg(31) <= '0';
    largest_3_reg_718_pp0_iter32_reg(31) <= '0';
    largest_3_reg_718_pp0_iter33_reg(31) <= '0';
    largest_3_reg_718_pp0_iter34_reg(31) <= '0';
    largest_3_reg_718_pp0_iter35_reg(31) <= '0';
    largest_3_reg_718_pp0_iter36_reg(31) <= '0';
    largest_3_reg_718_pp0_iter37_reg(31) <= '0';
    largest_3_reg_718_pp0_iter38_reg(31) <= '0';
    largest_3_reg_718_pp0_iter39_reg(31) <= '0';
    largest_3_reg_718_pp0_iter40_reg(31) <= '0';
    largest_3_reg_718_pp0_iter41_reg(31) <= '0';
    largest_3_reg_718_pp0_iter42_reg(31) <= '0';
    largest_3_reg_718_pp0_iter43_reg(31) <= '0';
    largest_3_reg_718_pp0_iter44_reg(31) <= '0';
    and_ln179_1_fu_417_p2 <= (and_ln179_7_fu_411_p2 and and_ln179_2_fu_385_p2);
    and_ln179_2_fu_385_p2 <= (grp_fu_109_p2 and and_ln179_fu_381_p2);
    and_ln179_3_fu_391_p2 <= (or_ln179_reg_653 and or_ln179_2_reg_667);
    and_ln179_4_fu_395_p2 <= (grp_fu_113_p2 and and_ln179_3_fu_391_p2);
    and_ln179_5_fu_401_p2 <= (or_ln179_reg_653 and or_ln179_3_reg_674);
    and_ln179_6_fu_405_p2 <= (grp_fu_117_p2 and and_ln179_5_fu_401_p2);
    and_ln179_7_fu_411_p2 <= (and_ln179_6_fu_405_p2 and and_ln179_4_fu_395_p2);
    and_ln179_fu_381_p2 <= (or_ln179_reg_653 and or_ln179_1_reg_660);
    and_ln184_1_fu_429_p2 <= (or_ln179_2_reg_667 and or_ln179_1_reg_660);
    and_ln184_2_fu_433_p2 <= (grp_fu_125_p2 and and_ln184_1_fu_429_p2);
    and_ln184_3_fu_439_p2 <= (or_ln179_3_reg_674 and or_ln179_1_reg_660);
    and_ln184_4_fu_443_p2 <= (grp_fu_129_p2 and and_ln184_3_fu_439_p2);
    and_ln184_5_fu_489_p2 <= (and_ln184_4_fu_443_p2 and and_ln184_2_fu_433_p2);
    and_ln184_6_fu_495_p2 <= (xor_ln179_fu_483_p2 and and_ln184_fu_423_p2);
    and_ln184_7_fu_501_p2 <= (and_ln184_6_fu_495_p2 and and_ln184_5_fu_489_p2);
    and_ln184_fu_423_p2 <= (grp_fu_121_p2 and and_ln179_fu_381_p2);
    and_ln189_1_fu_477_p2 <= (and_ln189_fu_449_p2 and and_ln189_5_fu_471_p2);
    and_ln189_2_fu_455_p2 <= (grp_fu_137_p2 and and_ln184_1_fu_429_p2);
    and_ln189_3_fu_461_p2 <= (or_ln179_3_reg_674 and or_ln179_2_reg_667);
    and_ln189_4_fu_465_p2 <= (grp_fu_141_p2 and and_ln189_3_fu_461_p2);
    and_ln189_5_fu_471_p2 <= (and_ln189_4_fu_465_p2 and and_ln189_2_fu_455_p2);
    and_ln189_fu_449_p2 <= (grp_fu_133_p2 and and_ln179_3_fu_391_p2);
    and_ln201_fu_599_p2 <= (or_ln201_fu_593_p2 and grp_fu_145_p2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_phi_mux_p_0_phi_fu_60_p4_assign_proc : process(and_ln201_reg_728_pp0_iter47_reg, grp_fu_92_p2, ap_phi_reg_pp0_iter48_p_0_reg_56, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_0 = and_ln201_reg_728_pp0_iter47_reg))) then 
            ap_phi_mux_p_0_phi_fu_60_p4 <= grp_fu_92_p2;
        else 
            ap_phi_mux_p_0_phi_fu_60_p4 <= ap_phi_reg_pp0_iter48_p_0_reg_56;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_0_reg_56 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_return <= ap_phi_mux_p_0_phi_fu_60_p4;
    bitcast_ln201_fu_564_p1 <= largest_3_reg_718;
    d1_3_fu_522_p3 <= 
        d1_4_reg_605_pp0_iter1_reg when (and_ln184_7_reg_695(0) = '1') else 
        d1_fu_517_p3;
    d1_4_fu_175_p1 <= p_Result_s_fu_167_p3;
    d1_fu_517_p3 <= 
        d2_4_reg_617_pp0_iter1_reg when (and_ln179_1_reg_681(0) = '1') else 
        d1_4_reg_605_pp0_iter1_reg;
    d2_3_fu_533_p3 <= 
        largest_4_reg_629_pp0_iter1_reg when (and_ln184_7_reg_695(0) = '1') else 
        d2_fu_528_p3;
    d2_4_fu_204_p1 <= p_Result_48_fu_196_p3;
    d2_fu_528_p3 <= 
        largest_4_reg_629_pp0_iter1_reg when (and_ln179_1_reg_681(0) = '1') else 
        d2_4_reg_617_pp0_iter1_reg;
    d3_1_fu_507_p3 <= 
        d3_reg_642_pp0_iter1_reg when (and_ln189_1_reg_689(0) = '1') else 
        largest_4_reg_629_pp0_iter1_reg;
    d3_2_fu_539_p3 <= 
        d3_reg_642_pp0_iter1_reg when (and_ln179_1_reg_681(0) = '1') else 
        d3_1_fu_507_p3;
    d3_3_fu_545_p3 <= 
        d3_reg_642_pp0_iter1_reg when (and_ln184_7_reg_695(0) = '1') else 
        d3_2_fu_539_p3;
    d3_fu_262_p1 <= p_Result_50_fu_254_p3;

    grp_fu_101_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_101_ce <= ap_const_logic_1;
        else 
            grp_fu_101_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_105_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_105_ce <= ap_const_logic_1;
        else 
            grp_fu_105_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_109_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_109_ce <= ap_const_logic_1;
        else 
            grp_fu_109_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_113_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_113_ce <= ap_const_logic_1;
        else 
            grp_fu_113_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_117_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_117_ce <= ap_const_logic_1;
        else 
            grp_fu_117_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_121_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_121_ce <= ap_const_logic_1;
        else 
            grp_fu_121_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_125_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_125_ce <= ap_const_logic_1;
        else 
            grp_fu_125_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_129_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_129_ce <= ap_const_logic_1;
        else 
            grp_fu_129_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_133_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_133_ce <= ap_const_logic_1;
        else 
            grp_fu_133_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_137_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_137_ce <= ap_const_logic_1;
        else 
            grp_fu_137_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_141_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_141_ce <= ap_const_logic_1;
        else 
            grp_fu_141_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_145_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_145_ce <= ap_const_logic_1;
        else 
            grp_fu_145_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_145_p0 <= 
        d2_4_reg_617_pp0_iter1_reg when (and_ln184_7_reg_695(0) = '1') else 
        largest_2_fu_551_p3;

    grp_fu_150_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_150_ce <= ap_const_logic_1;
        else 
            grp_fu_150_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_67_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_67_ce <= ap_const_logic_1;
        else 
            grp_fu_67_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_72_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_72_ce <= ap_const_logic_1;
        else 
            grp_fu_72_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_76_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_76_ce <= ap_const_logic_1;
        else 
            grp_fu_76_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_80_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_80_ce <= ap_const_logic_1;
        else 
            grp_fu_80_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_84_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_84_ce <= ap_const_logic_1;
        else 
            grp_fu_84_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_88_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_88_ce <= ap_const_logic_1;
        else 
            grp_fu_88_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_92_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_92_ce <= ap_const_logic_1;
        else 
            grp_fu_92_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_97_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_97_ce <= ap_const_logic_1;
        else 
            grp_fu_97_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln179_1_fu_295_p2 <= "1" when (trunc_ln189_fu_163_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_2_fu_307_p2 <= "0" when (tmp_2_fu_279_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_3_fu_313_p2 <= "1" when (trunc_ln189_1_fu_192_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_4_fu_335_p2 <= "0" when (tmp_4_fu_325_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_5_fu_341_p2 <= "1" when (trunc_ln189_2_fu_221_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_6_fu_363_p2 <= "0" when (tmp_6_fu_353_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_7_fu_369_p2 <= "1" when (trunc_ln189_3_fu_250_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_fu_289_p2 <= "0" when (tmp_1_fu_269_p4 = ap_const_lv8_FF) else "1";
    icmp_ln201_1_fu_587_p2 <= "1" when (trunc_ln201_fu_577_p1 = ap_const_lv23_0) else "0";
    icmp_ln201_fu_581_p2 <= "0" when (tmp_14_fu_567_p4 = ap_const_lv8_FF) else "1";
    largest_1_fu_512_p3 <= 
        largest_4_reg_629_pp0_iter1_reg when (and_ln189_1_reg_689(0) = '1') else 
        d3_reg_642_pp0_iter1_reg;
    largest_2_fu_551_p3 <= 
        d1_4_reg_605_pp0_iter1_reg when (and_ln179_1_reg_681(0) = '1') else 
        largest_1_fu_512_p3;
    largest_3_fu_557_p3 <= 
        d2_4_reg_617_pp0_iter1_reg when (and_ln184_7_reg_695(0) = '1') else 
        largest_2_fu_551_p3;
    largest_4_fu_233_p1 <= p_Result_49_fu_225_p3;
    or_ln179_1_fu_319_p2 <= (icmp_ln179_3_fu_313_p2 or icmp_ln179_2_fu_307_p2);
    or_ln179_2_fu_347_p2 <= (icmp_ln179_5_fu_341_p2 or icmp_ln179_4_fu_335_p2);
    or_ln179_3_fu_375_p2 <= (icmp_ln179_7_fu_369_p2 or icmp_ln179_6_fu_363_p2);
    or_ln179_fu_301_p2 <= (icmp_ln179_fu_289_p2 or icmp_ln179_1_fu_295_p2);
    or_ln201_fu_593_p2 <= (icmp_ln201_fu_581_p2 or icmp_ln201_1_fu_587_p2);
    p_Result_48_fu_196_p3 <= (ap_const_lv1_0 & trunc_ln368_1_fu_188_p1);
    p_Result_49_fu_225_p3 <= (ap_const_lv1_0 & trunc_ln368_2_fu_217_p1);
    p_Result_50_fu_254_p3 <= (ap_const_lv1_0 & trunc_ln368_3_fu_246_p1);
    p_Result_s_fu_167_p3 <= (ap_const_lv1_0 & trunc_ln368_fu_159_p1);
    p_Val2_64_fu_184_p1 <= a_M_imag_int_reg;
    p_Val2_65_fu_213_p1 <= b_M_real_int_reg;
    p_Val2_66_fu_242_p1 <= b_M_imag_int_reg;
    p_Val2_s_fu_155_p1 <= a_M_real_int_reg;
    tmp_14_fu_567_p4 <= bitcast_ln201_fu_564_p1(30 downto 23);
    tmp_1_fu_269_p4 <= p_Val2_s_fu_155_p1(30 downto 23);
    tmp_2_fu_279_p4 <= p_Val2_64_fu_184_p1(30 downto 23);
    tmp_4_fu_325_p4 <= p_Val2_65_fu_213_p1(30 downto 23);
    tmp_6_fu_353_p4 <= p_Val2_66_fu_242_p1(30 downto 23);
    trunc_ln189_1_fu_192_p1 <= p_Val2_64_fu_184_p1(23 - 1 downto 0);
    trunc_ln189_2_fu_221_p1 <= p_Val2_65_fu_213_p1(23 - 1 downto 0);
    trunc_ln189_3_fu_250_p1 <= p_Val2_66_fu_242_p1(23 - 1 downto 0);
    trunc_ln189_fu_163_p1 <= p_Val2_s_fu_155_p1(23 - 1 downto 0);
    trunc_ln201_fu_577_p1 <= bitcast_ln201_fu_564_p1(23 - 1 downto 0);
    trunc_ln368_1_fu_188_p1 <= p_Val2_64_fu_184_p1(31 - 1 downto 0);
    trunc_ln368_2_fu_217_p1 <= p_Val2_65_fu_213_p1(31 - 1 downto 0);
    trunc_ln368_3_fu_246_p1 <= p_Val2_66_fu_242_p1(31 - 1 downto 0);
    trunc_ln368_fu_159_p1 <= p_Val2_s_fu_155_p1(31 - 1 downto 0);
    xor_ln179_fu_483_p2 <= (ap_const_lv1_1 xor and_ln179_1_fu_417_p2);
end behav;
